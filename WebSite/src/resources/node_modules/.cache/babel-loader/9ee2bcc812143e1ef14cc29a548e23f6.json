{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/methods/calling.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Calling() {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calling methods\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Calling methods is done simply by using the method name optionally followed by its arguments name and value pairs.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n      lines: 8,\n      sampleUrl: \"samples/methods/add3Integers.pec\",\n      runnable: true\n    }, PromptoPlayer.nextKey(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Thanks to naming, arguments can be provided in any sequence, which makes it clear how the arguments are used.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n      lines: 8,\n      sampleUrl: \"samples/methods/namedArguments.pec\",\n      runnable: true\n    }, PromptoPlayer.nextKey(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Naming the arguments is mandatory in Prompto. However, when a method accepts only 1 argument, the argument name can be omitted:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n      lines: 8,\n      sampleUrl: \"samples/methods/anonymousArgument.pec\",\n      runnable: true\n    }, PromptoPlayer.nextKey(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 3\n  }, this);\n}\n_c = Calling;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calling\");","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/methods/calling.js"],"names":["Calling","PromptoPlayer","nextKey"],"mappings":";;AAAA,eAAe,SAASA,OAAT,GAAmB;AACjC,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFV,eAKU,QAAC,aAAD;AAA6C,MAAA,KAAK,EAAE,CAApD;AAAuD,MAAA,SAAS,EAAC,kCAAjE;AAAoG,MAAA,QAAQ,EAAE;AAA9G,OAAoBC,aAAa,CAACC,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,YALV,eAOU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPV,eAQU,QAAC,aAAD;AAA6C,MAAA,KAAK,EAAE,CAApD;AAAwD,MAAA,SAAS,EAAC,oCAAlE;AAAuG,MAAA,QAAQ,EAAE;AAAjH,OAAoBD,aAAa,CAACC,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,YARV,eAUU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVV,eAYU,QAAC,aAAD;AAA6C,MAAA,KAAK,EAAE,CAApD;AAAwD,MAAA,SAAS,EAAC,uCAAlE;AAA0G,MAAA,QAAQ,EAAE;AAApH,OAAoBD,aAAa,CAACC,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,YAZV;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;KAjBuBF,O","sourcesContent":["export default function Calling() {\n\treturn (\n\t\t<li>\n\t\t\t<h2>Calling methods</h2>\n            <p>Calling methods is done simply by using the method name optionally followed by its arguments name and\n                value pairs.</p>\n\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={8} sampleUrl=\"samples/methods/add3Integers.pec\" runnable={true}/>\n\n            <p>Thanks to naming, arguments can be provided in any sequence, which makes it clear how the arguments are used.</p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={8}  sampleUrl=\"samples/methods/namedArguments.pec\" runnable={true}/>\n\n            <p>Naming the arguments is mandatory in Prompto. However, when a method accepts only 1 argument, the\n                argument name can be omitted:</p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={8}  sampleUrl=\"samples/methods/anonymousArgument.pec\" runnable={true}/>\n\t\t</li>\n\t)\n}"]},"metadata":{},"sourceType":"module"}