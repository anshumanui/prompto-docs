{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/methods/Arguments.js\";\nimport React from 'react';\nimport Topic from \"../../../content/Topic\";\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Arguments\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Method arguments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A Prompto method can accept 0 or more arguments.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Arguments must be declared (there is no implicit argument such as \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"arguments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 86\n        }, this), \" in JavaScript).\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"When mutiple arguments are declared, they must be separated by commas. In E dialect only, the last comma is replaced by the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"and\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 144\n        }, this), \" keyword.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Arguments are typed, in one of the following ways:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Attribute argument\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), \", with the form \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 66\n          }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 104\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 98\n          }, this), \" is an existing Attribute name.\", /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n            lines: 10,\n            sampleUrl: \"samples/methods/attributeArgument.pec\",\n            runnable: true\n          }, PromptoPlayer.nextKey(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Typed argument\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), \", with the form \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Type x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 62\n          }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 102\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 96\n          }, this), \" is an existing Type name and \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this), \" can be any valid variable identifier.\", /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n            lines: 8,\n            sampleUrl: \"samples/methods/typedArgument.pec\",\n            runnable: true\n          }, PromptoPlayer.nextKey(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Attribute member argument\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), \", with the form \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: [\"any \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 83\n            }, this), \" with attribute \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 107\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 73\n          }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 139\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 133\n          }, this), \" can be any valid variable identifier and \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 44\n          }, this), \" is an existing Attribute name. This form accepts more than one attribute.\", /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n            lines: 10,\n            sampleUrl: \"samples/methods/memberArgument.pec\",\n            runnable: true\n          }, PromptoPlayer.nextKey(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Extended member argument\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), \", with the form \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Type x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 78\n            }, this), \" with attribute \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 107\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 72\n          }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 35\n          }, this), \" is an existing category name, \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 96\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 90\n          }, this), \" can be any valid variable identifier and \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 44\n          }, this), \" is an existing Attribute name. This form accepts more than one attribute.\", /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n            lines: 12,\n            sampleUrl: \"samples/methods/extendedArgument.pec\",\n            runnable: true\n          }, PromptoPlayer.nextKey(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Mixing argument types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"When a method expects mutiple arguments, argument types can be mixed as required. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n          lines: 10,\n          sampleUrl: \"samples/methods/mixedArguments.pec\",\n          runnable: true\n        }, PromptoPlayer.nextKey(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Default argument values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Prompto supports \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }, this), \" argument values, which remove the need to always pass all arguments to a method.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Default argument values must be \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"constant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 52\n        }, this), \" values, i.e. they cannot vary during program execution. Good candidates are literals, null, and enumerated values.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n          lines: 10,\n          sampleUrl: \"samples/methods/defaultArgument.pec\",\n          runnable: true\n        }, PromptoPlayer.nextKey(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/methods/Arguments.js"],"names":["React","Topic","PromptoPlayer","ThisTopic","constructor","renderContent","topicSelected","nextKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Topic from \"../../../content/Topic\";\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Arguments\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n                <h2>Method arguments</h2>\n\n                <p>A Prompto method can accept 0 or more arguments.</p>\n                <p>Arguments must be declared (there is no implicit argument such as <i>arguments</i> in JavaScript).</p>\n                <p>When mutiple arguments are declared, they must be separated by commas. In E dialect only, the last comma is replaced by the <code>and</code> keyword.</p>\n                <p>Arguments are typed, in one of the following ways:</p>\n                <ul>\n                    <li>\n                        <b>Attribute argument</b>, with the form <code><i>name</i></code>, where <code><i>name</i></code> is an existing Attribute name.\n                        <PromptoPlayer key={PromptoPlayer.nextKey()} lines={10} sampleUrl=\"samples/methods/attributeArgument.pec\" runnable={true}/>\n                    </li>\n                    <br/>\n\n                    <li>\n                        <b>Typed argument</b>, with the form <code><i>Type x</i></code>, where <code><i>type</i></code> is an existing Type name\n                            and <code><i>x</i></code> can be any valid variable identifier.\n                        <PromptoPlayer key={PromptoPlayer.nextKey()} lines={8} sampleUrl=\"samples/methods/typedArgument.pec\" runnable={true}/>\n                    </li>\n                    <br/>\n\n                    <li>\n                        <b>Attribute member argument</b>, with the form <code>any <i>x</i> with attribute <i>name</i></code>, where <code><i>x</i></code> can be any valid variable\n                            identifier and <code><i>name</i></code> is an existing Attribute name. This form accepts more than one attribute.\n                        <PromptoPlayer key={PromptoPlayer.nextKey()} lines={10} sampleUrl=\"samples/methods/memberArgument.pec\" runnable={true}/>\n                    </li>\n                    <br/>\n\n                    <li>\n                        <b>Extended member argument</b>, with the form <code><i>Type x</i> with attribute <i>name</i></code>,\n                            where <code><i>type</i></code> is an existing category name, <code><i>x</i></code> can be any valid variable\n                            identifier and <code><i>name</i></code> is an existing Attribute name. This form accepts more than one attribute.\n                        <PromptoPlayer key={PromptoPlayer.nextKey()} lines={12} sampleUrl=\"samples/methods/extendedArgument.pec\" runnable={true}/>\n                   </li>\n                </ul>\n                <br/>\n\n                <h4>Mixing argument types</h4>\n                <p>When a method expects mutiple arguments, argument types can be mixed as required. </p>\n                <ul>\n                    <PromptoPlayer key={PromptoPlayer.nextKey()} lines={10} sampleUrl=\"samples/methods/mixedArguments.pec\" runnable={true}/>\n                </ul>\n                <br/>\n\n               <h4>Default argument values</h4>\n                <p>Prompto supports <i>default</i> argument values, which remove the need to always pass all arguments to a method.</p>\n                <p>Default argument values must be <i>constant</i> values, i.e. they cannot vary during program execution. Good candidates are literals, null, and enumerated values.</p>\n                <ul>\n                    <PromptoPlayer key={PromptoPlayer.nextKey()} lines={10} sampleUrl=\"samples/methods/defaultArgument.pec\" runnable={true}/>\n                </ul>\n\n            </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}