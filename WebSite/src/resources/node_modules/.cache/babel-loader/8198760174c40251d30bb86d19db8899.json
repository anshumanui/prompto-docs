{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/types/BooleanType.js\";\nimport React from 'react';\nimport Topic from \"../../../content/Topic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Boolean\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Boolean\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Boolean\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 20\n        }, this), \" type is a technical type used exclusively for the values true and false.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 113\n        }, this), \"A Boolean literal is simply one of the words \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 62\n        }, this), \" or \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 83\n        }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 102\n        }, this), \"Alternately, Prompto also supports the words \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"True\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 62\n        }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 84\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/types/BooleanType.js"],"names":["React","Topic","ThisTopic","constructor","renderContent","topicSelected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;;AAEA,MAAMC,SAAN,SAAwBD,KAAxB,CAA8B;AAE1BE,EAAAA,WAAW,GAAG;AACV,UAAM,SAAN;AACH;;AAEDC,EAAAA,aAAa,CAACC,aAAD,EAAgB;AACzB,wBAAO;AAAA,8BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAGH;AAAA,wCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP,4FAAoG;AAAA;AAAA;AAAA;AAAA,gBAApG,gEACiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADjD,uBACsE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADtE,oBACyF;AAAA;AAAA;AAAA;AAAA,gBADzF,gEAEiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFjD,wBAEuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFvE;AAAA;AAAA;AAAA;AAAA;AAAA,cAHG;AAAA,oBAAP;AAQH;;AAfyB;;AAmB9B,eAAe,IAAIH,SAAJ,EAAf","sourcesContent":["import React from 'react';\nimport Topic from \"../../../content/Topic\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Boolean\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n            <h2>Boolean</h2>\n\n            <p>The <code>Boolean</code> type is a technical type used exclusively for the values true and false.<br/>\n                A Boolean literal is simply one of the words <code>true</code> or <code>false</code>.<br/>\n                Alternately, Prompto also supports the words <code>True</code> and <code>False</code>.\n            </p>\n        </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}