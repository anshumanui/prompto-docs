{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/types/ListType.js\";\nimport React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"List\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The List type is a technical type used to keep together 0 or more items of the same type.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 105\n        }, this), \"The items themselves can be of any type.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 57\n        }, this), \"A List type is declared by adding square brackets '[]' after the item type.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Text[] -> the type Text list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A List literal must be enclosed in square brackets '[' and ']', the items being separated by a comma ','.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: String.raw`[12, 15, -3] -> a List of 3 Integers\n[\"Paris\", \"London\", \"Singapore\"] -> a List of 3 Texts`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Items in a List can be accessed individually using their position.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 86\n        }, this), \"Positions start at 1 and end at the list length.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: String.raw`a = [12, 15, -3] -> assign a List of 3 Integers to variable 'a'\na[1] -> get item at position 1 in List referenced by variable 'a' i.e. the Integer 12`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"List attributes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"List values have the following attributes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), \": returns an Integer equal to the number of items in the list\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n          sampleUrl: \"samples/types/list/count.pec\",\n          runnable: true\n        }, PromptoPlayer.nextKey(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/types/ListType.js"],"names":["React","PromptoPlayer","Topic","ThisTopic","constructor","renderContent","topicSelected","String","raw","nextKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;;AAEA,MAAMC,SAAN,SAAwBD,KAAxB,CAA8B;AAE1BE,EAAAA,WAAW,GAAG;AACV,UAAM,MAAN;AACH;;AAEDC,EAAAA,aAAa,CAACC,aAAD,EAAgB;AACzB,wBAAO;AAAA,8BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAGH;AAAA,6HAA4F;AAAA;AAAA;AAAA;AAAA,gBAA5F,2DAC4C;AAAA;AAAA;AAAA;AAAA,gBAD5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAHG,eAOH;AAAA,+BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAPG,eAQH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARG,eASH;AAAA,+BAAK;AAAA,oBAAOC,MAAM,CAACC,GAAI;AACnC;AADiB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cATG,eAWC;AAAA;AAAA;AAAA;AAAA,cAXD,eAYC;AAAA,sGAAqE;AAAA;AAAA;AAAA;AAAA,gBAArE;AAAA;AAAA;AAAA;AAAA;AAAA,cAZD,eAcC;AAAA,+BAAK;AAAA,oBAAOD,MAAM,CAACC,GAAI;AACvC;AADqB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAdD,eAgBH;AAAA;AAAA;AAAA;AAAA,cAhBG,eAkBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBG,eAqBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBG,eAsBH;AAAA,gCACI;AAAA,kCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,aAAD;AAA6C,UAAA,SAAS,EAAC,8BAAvD;AAAsF,UAAA,QAAQ,EAAE;AAAhG,WAAoBP,aAAa,CAACQ,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBG,eA0BJ;AAAA;AAAA;AAAA;AAAA,cA1BI;AAAA,oBAAP;AA4BH;;AAnCyB;;AAuC9B,eAAe,IAAIN,SAAJ,EAAf","sourcesContent":["import React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"List\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n            <h2>List</h2>\n\n            <p>The List type is a technical type used to keep together 0 or more items of the same type.<br/>\n                The items themselves can be of any type.<br/>\n                A List type is declared by adding square brackets '[]' after the item type.\n            </p>\n            <pre><code>Text[] -> the type Text list</code></pre>\n            <p>A List literal must be enclosed in square brackets '[' and ']', the items being separated by a comma ','.</p>\n            <pre><code>{String.raw`[12, 15, -3] -> a List of 3 Integers\n[\"Paris\", \"London\", \"Singapore\"] -> a List of 3 Texts`}</code></pre>\n                <br/>\n                <p>Items in a List can be accessed individually using their position.<br/>\n                Positions start at 1 and end at the list length.</p>\n                <pre><code>{String.raw`a = [12, 15, -3] -> assign a List of 3 Integers to variable 'a'\na[1] -> get item at position 1 in List referenced by variable 'a' i.e. the Integer 12`}</code></pre>\n            <br/>\n\n            <h3>\n                List attributes\n            </h3>\n            <p>List values have the following attributes:</p>\n            <ul>\n                <li><code>count</code>: returns an Integer equal to the number of items in the list</li>\n                <PromptoPlayer key={PromptoPlayer.nextKey()} sampleUrl=\"samples/types/list/count.pec\" runnable={true}/>\n            </ul>\n           <br/>\n            </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}