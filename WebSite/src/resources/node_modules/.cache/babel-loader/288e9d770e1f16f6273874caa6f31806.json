{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/types/CssType.js\";\nimport React from 'react';\nimport Topic from \"../../../content/Topic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Css\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Css\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"CSS stands for \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 31\n        }, this), \"ascading \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"S\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 48\n        }, this), \"tyle \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"S\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 61\n        }, this), \"heet. CSS is a Web standard defined \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          href: \"https://www.w3.org/Style/CSS/Overview.en.html\",\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 47\n        }, this), \". The \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Css\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), \" type is a technical type used for CSS expressions.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 88\n        }, this), \"A CSS literal is a sequence of 1 or more CSS entries, separated by semi-colons.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 96\n        }, this), \"A CSS entry comprises exactly:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"a \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"property\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 31\n          }, this), \" (which must be a valid CSS property)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }, this), \" separator\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"a \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 31\n          }, this), \", which can be either of:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"a \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"literal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 39\n              }, this), \" (which must be a valid CSS value for the property)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"a Prompto expression enclosed in curly braces (which must provide a valid CSS value for the property)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \";\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this), \" terminator\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" A Css literal must be enclosed in curly brackets.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: [String.raw`{ width: 80px; display: none; } -> a simple CSS literal\n{ display: { `, /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"some_value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }, this), \" }; } -> a CSS literal, where the \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 67\n        }, this), \" for the \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 88\n        }, this), \" property is determined at runtime\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/types/CssType.js"],"names":["React","Topic","ThisTopic","constructor","renderContent","topicSelected","String","raw"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;;AAEA,MAAMC,SAAN,SAAwBD,KAAxB,CAA8B;AAE1BE,EAAAA,WAAW,GAAG;AACV,UAAM,KAAN;AACH;;AAEDC,EAAAA,aAAa,CAACC,aAAD,EAAgB;AACzB,wBAAO;AAAA,8BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAGH;AAAA,mDAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlB,4BAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAnC,wBAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhD,uDACkC;AAAG,UAAA,MAAM,EAAC,QAAV;AAAmB,UAAA,GAAG,EAAC,qBAAvB;AAA6C,UAAA,IAAI,EAAC,+CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADlC,yBAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,sEAE2E;AAAA;AAAA;AAAA;AAAA,gBAF3E,kGAGmF;AAAA;AAAA;AAAA;AAAA,gBAHnF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHG,eAQK;AAAA,gCACI;AAAA,wCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAN;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,0CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,wCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAN,4CACI;AAAA,oCACI;AAAA,4CAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAN;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eASI;AAAA,0CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARL,eAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBA,eAoBH;AAAA,mBAAMC,MAAM,CAACC,GAAI;AAC7B,cADY,eACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,qDACsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADtD,4BAC2E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD3E;AAAA;AAAA;AAAA;AAAA;AAAA,cApBG;AAAA,oBAAP;AAwBH;;AA/ByB;;AAmC9B,eAAe,IAAIL,SAAJ,EAAf","sourcesContent":["import React from 'react';\nimport Topic from \"../../../content/Topic\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Css\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n            <h2>Css</h2>\n\n            <p>CSS stands for <b>C</b>ascading <b>S</b>tyle <b>S</b>heet.\n                CSS is a Web standard defined <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.w3.org/Style/CSS/Overview.en.html\">here</a>.\n                The <code>Css</code> type is a technical type used for CSS expressions.<br/>\n                A CSS literal is a sequence of 1 or more CSS entries, separated by semi-colons.<br/>\n                A CSS entry comprises exactly:</p>\n                    <ul>\n                        <li>a <i>property</i> (which must be a valid CSS property)</li>\n                        <li>the <code>:</code> separator</li>\n                        <li>a <i>value</i>, which can be either of:\n                            <ul>\n                                <li>a <i>literal</i> (which must be a valid CSS value for the property)</li>\n                                <li>a Prompto expression enclosed in curly braces (which must provide a valid CSS value for the property)</li>\n                            </ul>\n                        </li>\n                        <li>the <code>;</code> terminator</li>\n                    </ul>\n               <p> A Css literal must be enclosed in curly brackets.</p>\n            <pre>{String.raw`{ width: 80px; display: none; } -> a simple CSS literal\n{ display: { `}<i>some_value</i> }; } -> a CSS literal, where the <i>value</i> for the <i>display</i> property is determined at runtime</pre>\n\n            </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}