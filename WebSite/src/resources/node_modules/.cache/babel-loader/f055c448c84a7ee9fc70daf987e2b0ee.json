{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/prompto-player/PromptoPlayer.js\";\nimport axios from 'axios';\nimport React from 'react';\nimport AceEditor from 'react-ace';\nimport 'brace/theme/eclipse';\nimport 'brace/mode/text';\nimport PromptoMode from \"./PromptoMode\";\nimport { Navbar, Nav, NavItem, Button, Form, NavLink } from 'react-bootstrap';\nimport PROMPTO_WORKER from './PromptoWorkerListener';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DialectSwitcher extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(NavItem, {\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        eventKey: this.props.dialect,\n        active: this.props.active,\n        onSelect: () => this.props.dialectSelected(this.props.dialect),\n        children: this.props.dialect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst ALL_DIALECTS = [\"Engly\", \"Objy\", \"Monty\"];\n\nclass PlayerNavbar extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"light\",\n      variant: \"light\",\n      style: this.props.style,\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        variant: \"tabs\",\n        children: ALL_DIALECTS.map(d => /*#__PURE__*/_jsxDEV(DialectSwitcher, {\n          dialect: d,\n          active: d[0] === this.props.dialect,\n          dialectSelected: this.props.dialectSelected\n        }, d, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 43\n        }, this), this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), this.renderTryItButton()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n\n  renderTryItButton() {\n    if (this.props.runnable) return /*#__PURE__*/_jsxDEV(Form, {\n      inline: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"light\",\n        onClick: this.props.runRequested,\n        children: \"Try it!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }, this);else return null;\n  }\n\n}\n\nclass PlayerOutput extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-output\",\n      style: this.props.style,\n      children: [this.renderOutput(), this.renderDoneButton()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n\n  renderOutput() {\n    const lines = this.props.output || [];\n    return lines.map(this.renderLine);\n  }\n\n  renderLine(line, i) {\n    if (line.dest === \"stdout\") return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [line.text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 55\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 20\n    }, this);else return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"font\", {\n        color: \"red\",\n        children: [line.text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 73\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 44\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 20\n    }, this);\n  }\n\n  renderDoneButton() {\n    if (this.props.done) return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"light\",\n      onClick: this.props.doneRequested,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 20\n    }, this);else return null;\n  }\n\n}\n\nlet PLAYER_KEY = 0;\nexport default class PromptoPlayer extends React.Component {\n  static nextKey() {\n    return ++PLAYER_KEY;\n  }\n\n  constructor(props) {\n    super(props);\n    this.aceEditor = null;\n    const ext = this.props.sampleUrl.substring(this.props.sampleUrl.lastIndexOf(\".\"));\n    const dialect = ext[2].toUpperCase();\n    this.state = {\n      value: \"some text\",\n      dialect: dialect,\n      output: null,\n      done: false\n    };\n  }\n\n  componentDidMount() {\n    const editor = this.aceEditor.editor;\n    editor.setReadOnly(true);\n    editor.setShowPrintMargin(false);\n    editor.setHighlightActiveLine(false);\n    editor.renderer.setShowGutter(false);\n    editor.renderer.$cursorLayer.element.style.display = \"none\";\n    editor.getSession().setMode(new PromptoMode(this));\n    axios.get(this.props.sampleUrl).then(resp => this.setState({\n      value: resp.data\n    })).catch(error => console.log(error));\n  }\n\n  dialectSelected(dialect) {\n    const target = dialect[0];\n    if (target === this.state.dialect) return;\n    PROMPTO_WORKER.translate(this.state.value, this.state.dialect, target, translated => this.setState({\n      dialect: target,\n      value: translated\n    }));\n  }\n\n  runRequested() {\n    this.setState({\n      output: []\n    }, () => PROMPTO_WORKER.execute(this.state.value, this.state.dialect, (stdout, stderr) => {\n      if (stdout) this.addToOutput(\"stdout\", stdout);else if (stderr) this.addToOutput(\"stderr\", stderr);\n    }));\n  }\n\n  addToOutput(dest, text) {\n    const nextCR = text.indexOf(\"\\n\");\n    if (nextCR < 0 || nextCR === text.length - 1) this.addSingleLineToOutput(dest, text);else this.addMultiLinesToOutput(dest, text);\n  }\n\n  addSingleLineToOutput(dest, text) {\n    const output = this.state.output;\n    const entry = output[output.length - 1] || {\n      dest: \"none\",\n      text: \"\"\n    };\n    const done = text.startsWith(\"Success!\");\n    if (done || entry.dest !== dest || entry.text.endsWith(\"\\n\")) output.push({\n      dest: dest,\n      text: text\n    });else entry.text += text;\n    this.setState({\n      output: output,\n      done: done\n    });\n  }\n\n  addMultiLinesToOutput(dest, text) {\n    const endsWithCR = text.endsWith(\"\\n\");\n    const output = this.state.output;\n    const entry = output[output.length - 1] || {\n      dest: \"none\",\n      text: \"\"\n    };\n    const lines = text.split(\"\\n\");\n    if (endsWithCR) lines.pop(); // add first line\n\n    if (entry.dest !== dest || entry.text.endsWith(\"\\n\")) output.push({\n      dest: dest,\n      text: lines[0] + \"\\n\"\n    });else entry.text += lines[0]; // add full lines\n\n    for (let i = 1; i < lines.length - 1; i++) output.push({\n      dest: dest,\n      text: lines[i] + \"\\n\"\n    }); // add last line\n\n\n    const lastEntry = {\n      dest: dest,\n      text: lines[lines.length - 1]\n    };\n    if (endsWithCR) lastEntry.text += \"\\n\";\n    output.push(lastEntry);\n    this.setState({\n      output: output\n    });\n  }\n\n  render() {\n    const lines = this.props.lines || 6;\n    const fullHeight = 50 + lines * 15;\n    const style = {\n      height: fullHeight\n    };\n    const aceHeight = \"\" + (fullHeight - 32) + \"px\";\n    const inputStyle = {\n      display: this.state.output === null ? \"block\" : \"none\"\n    };\n    const outputStyle = {\n      display: this.state.output !== null ? \"block\" : \"none\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prompto-player\",\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(AceEditor, {\n        ref: ref => {\n          this.aceEditor = ref || this.aceEditor;\n        },\n        style: inputStyle,\n        theme: \"eclipse\",\n        mode: \"text\",\n        value: this.state.value,\n        editorProps: {\n          $blockScrolling: Infinity\n        },\n        width: \"100%\",\n        height: aceHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PlayerNavbar, {\n        style: inputStyle,\n        dialect: this.state.dialect,\n        runnable: this.props.runnable,\n        dialectSelected: this.dialectSelected.bind(this),\n        runRequested: this.runRequested.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PlayerOutput, {\n        style: outputStyle,\n        output: this.state.output,\n        done: this.state.done,\n        doneRequested: () => this.setState({\n          output: null,\n          done: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/prompto-player/PromptoPlayer.js"],"names":["axios","React","AceEditor","PromptoMode","Navbar","Nav","NavItem","Button","Form","NavLink","PROMPTO_WORKER","DialectSwitcher","Component","render","props","dialect","active","dialectSelected","ALL_DIALECTS","PlayerNavbar","style","map","d","renderTryItButton","runnable","runRequested","PlayerOutput","renderOutput","renderDoneButton","lines","output","renderLine","line","i","dest","text","done","doneRequested","PLAYER_KEY","PromptoPlayer","nextKey","constructor","aceEditor","ext","sampleUrl","substring","lastIndexOf","toUpperCase","state","value","componentDidMount","editor","setReadOnly","setShowPrintMargin","setHighlightActiveLine","renderer","setShowGutter","$cursorLayer","element","display","getSession","setMode","get","then","resp","setState","data","catch","error","console","log","target","translate","translated","execute","stdout","stderr","addToOutput","nextCR","indexOf","length","addSingleLineToOutput","addMultiLinesToOutput","entry","startsWith","endsWith","push","endsWithCR","split","pop","lastEntry","fullHeight","height","aceHeight","inputStyle","outputStyle","ref","$blockScrolling","Infinity","bind"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React from 'react';\nimport AceEditor from 'react-ace';\nimport 'brace/theme/eclipse';\nimport 'brace/mode/text';\nimport PromptoMode from \"./PromptoMode\";\nimport {Navbar, Nav, NavItem, Button, Form, NavLink} from 'react-bootstrap';\nimport PROMPTO_WORKER from './PromptoWorkerListener';\n\nclass DialectSwitcher extends React.Component {\n\n    render() {\n        return <NavItem>\n                <NavLink eventKey={this.props.dialect} active={this.props.active} onSelect={() => this.props.dialectSelected(this.props.dialect)}>{this.props.dialect}</NavLink>\n            </NavItem>;\n    }\n}\n\n\nconst ALL_DIALECTS = [\"Engly\", \"Objy\", \"Monty\"];\n\nclass PlayerNavbar extends React.Component {\n\n    render() {\n        return <Navbar bg=\"light\" variant=\"light\" style={this.props.style}>\n                <Nav variant=\"tabs\">\n                    { ALL_DIALECTS.map(d=><DialectSwitcher key={d} dialect={d}\n                                                           active={d[0]===this.props.dialect}\n                                                           dialectSelected={this.props.dialectSelected} />, this)\n                    }\n                </Nav>\n                { this.renderTryItButton() }\n            </Navbar>;\n    }\n\n    renderTryItButton() {\n        if(this.props.runnable)\n            return <Form inline>\n                        <Button variant=\"light\" onClick={this.props.runRequested}>Try it!</Button>\n                    </Form>;\n        else\n            return null;\n    }\n}\n\n\nclass PlayerOutput extends React.Component {\n\n    render() {\n        return <div className=\"player-output\" style={this.props.style}>\n                { this.renderOutput() }\n                { this.renderDoneButton() }\n             </div>;\n    }\n\n    renderOutput() {\n        const lines = this.props.output || [];\n        return lines.map(this.renderLine);\n    }\n\n    renderLine(line, i) {\n        if(line.dest===\"stdout\")\n            return <React.Fragment key={i}>{line.text}<br/></React.Fragment>;\n        else\n            return <React.Fragment key={i}><font color=\"red\">{line.text}<br/></font></React.Fragment>;\n    }\n\n    renderDoneButton() {\n        if(this.props.done)\n            return <Button variant=\"light\" onClick={this.props.doneRequested}>Done</Button>;\n        else\n            return null;\n    }\n\n}\n\nlet PLAYER_KEY = 0;\n\nexport default class PromptoPlayer extends React.Component {\n\n    static nextKey() {\n        return ++PLAYER_KEY;\n    }\n\n    constructor(props) {\n        super(props);\n        this.aceEditor = null;\n        const ext = this.props.sampleUrl.substring(this.props.sampleUrl.lastIndexOf(\".\"));\n        const dialect = ext[2].toUpperCase();\n        this.state = { value: \"some text\", dialect: dialect, output: null, done: false };\n    }\n\n    componentDidMount() {\n        const editor = this.aceEditor.editor;\n        editor.setReadOnly(true);\n        editor.setShowPrintMargin(false);\n        editor.setHighlightActiveLine(false);\n        editor.renderer.setShowGutter(false);\n        editor.renderer.$cursorLayer.element.style.display = \"none\";\n        editor.getSession().setMode(new PromptoMode(this));\n        axios.get(this.props.sampleUrl)\n            .then(resp => this.setState({value: resp.data}))\n            .catch(error => console.log(error));\n    }\n\n    dialectSelected(dialect) {\n        const target = dialect[0];\n        if(target===this.state.dialect)\n            return;\n        PROMPTO_WORKER.translate(this.state.value, this.state.dialect, target, translated => this.setState({dialect: target, value: translated}));\n    }\n\n    runRequested() {\n        this.setState({output: []}, () => PROMPTO_WORKER.execute(this.state.value, this.state.dialect, (stdout, stderr) => {\n            if (stdout)\n                this.addToOutput(\"stdout\", stdout);\n            else if (stderr)\n                this.addToOutput(\"stderr\", stderr);\n        }));\n    }\n\n    addToOutput(dest, text) {\n        const nextCR = text.indexOf(\"\\n\");\n        if (nextCR < 0 || nextCR === text.length - 1)\n            this.addSingleLineToOutput(dest, text);\n        else\n            this.addMultiLinesToOutput(dest, text);\n    }\n\n    addSingleLineToOutput(dest, text) {\n        const output = this.state.output;\n        const entry = output[output.length - 1] || {dest: \"none\", text: \"\"};\n        const done = text.startsWith(\"Success!\");\n        if (done || entry.dest !== dest || entry.text.endsWith(\"\\n\"))\n            output.push({dest: dest, text: text});\n        else\n            entry.text += text;\n        this.setState({output: output, done: done});\n    }\n\n    addMultiLinesToOutput(dest, text) {\n        const endsWithCR = text.endsWith(\"\\n\");\n        const output = this.state.output;\n        const entry = output[output.length - 1] || {dest: \"none\", text: \"\"};\n        const lines = text.split(\"\\n\");\n        if(endsWithCR)\n            lines.pop();\n        // add first line\n        if(entry.dest!==dest || entry.text.endsWith(\"\\n\"))\n            output.push({dest: dest, text: lines[0] + \"\\n\"});\n        else\n            entry.text += lines[0];\n        // add full lines\n        for(let i=1;i<lines.length-1;i++)\n            output.push({dest: dest, text: lines[i] + \"\\n\"});\n        // add last line\n        const lastEntry = {dest: dest, text: lines[lines.length - 1]};\n        if(endsWithCR)\n            lastEntry.text += \"\\n\";\n        output.push(lastEntry);\n        this.setState({output: output});\n    }\n\n    render() {\n        const lines = this.props.lines || 6;\n        const fullHeight = 50 + lines * 15;\n        const style = { height: fullHeight };\n        const aceHeight = \"\" + (fullHeight - 32) + \"px\";\n        const inputStyle = { display: (this.state.output===null ? \"block\" : \"none\" ) };\n        const outputStyle = { display: (this.state.output!==null ? \"block\" : \"none\" ) };\n\n        return <div className=\"prompto-player\" style={style}>\n                    <AceEditor ref={ref=>{this.aceEditor = ref || this.aceEditor;}}\n                               style={inputStyle}\n                               theme=\"eclipse\" mode=\"text\"\n                               value={this.state.value}\n                               editorProps={{ $blockScrolling: Infinity }}\n                               width=\"100%\" height={aceHeight} />\n                    <PlayerNavbar style={inputStyle}\n                                  dialect={this.state.dialect} runnable={this.props.runnable}\n                                  dialectSelected={this.dialectSelected.bind(this)}\n                                  runRequested={this.runRequested.bind(this)}  />\n                    <PlayerOutput style={outputStyle} output={this.state.output} done={this.state.done} doneRequested={()=>this.setState({output: null, done: false})}/>\n                </div>;\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}