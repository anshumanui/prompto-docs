{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/search/SearchBox.js\";\nimport React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport SearchEngine from \"./SearchEngine\";\nimport '../../assets/css/search.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Suggestion extends React.Component {\n  render() {\n    if (this.props.suggestion.sentence) return this.renderSentence();else return this.renderTopic();\n  }\n\n  renderSentence() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestion-title\",\n        children: this.props.suggestion.topic.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestion-sentence\",\n        children: this.props.suggestion.sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  renderTopic() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestion-title\",\n      children: this.props.suggestion.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass SearchBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      suggestions: []\n    };\n  }\n\n  fetchSuggestions(data) {\n    if (data.reason === 'input-changed') {\n      const suggestions = SearchEngine.search(data.value);\n      this.setState({\n        suggestions: suggestions\n      });\n    }\n  }\n\n  getSuggestionValue(suggestion) {\n    return suggestion.topic.title;\n  }\n\n  renderSuggestion(suggestion) {\n    return /*#__PURE__*/_jsxDEV(Suggestion, {\n      suggestion: suggestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n\n  shouldRenderSuggestions(value) {\n    return value.trim().length > 2;\n  }\n\n  clearSuggestions() {\n    this.setState({\n      suggestions: []\n    });\n  }\n\n  onChange(event, data) {\n    this.setState({\n      value: data.newValue\n    });\n  }\n\n  onSuggestionSelected(event, data) {\n    this.setState({\n      value: \"\",\n      suggestions: []\n    }, () => this.props.onSelectedSuggestion(data.suggestion));\n  }\n\n  render() {\n    const inputProps = {\n      placeholder: \"Search...\",\n      value: this.state.value,\n      onChange: this.onChange.bind(this)\n    };\n    return /*#__PURE__*/_jsxDEV(Autosuggest, {\n      inputProps: inputProps,\n      suggestions: this.state.suggestions,\n      getSuggestionValue: this.getSuggestionValue.bind(this),\n      renderSuggestion: this.renderSuggestion.bind(this),\n      shouldRenderSuggestions: this.shouldRenderSuggestions.bind(this),\n      highlightFirstSuggestion: true,\n      onSuggestionsFetchRequested: this.fetchSuggestions.bind(this),\n      onSuggestionsClearRequested: this.clearSuggestions.bind(this),\n      onSuggestionSelected: this.onSuggestionSelected.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default SearchBox;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/search/SearchBox.js"],"names":["React","Autosuggest","SearchEngine","Suggestion","Component","render","props","suggestion","sentence","renderSentence","renderTopic","topic","title","SearchBox","constructor","state","value","suggestions","fetchSuggestions","data","reason","search","setState","getSuggestionValue","renderSuggestion","shouldRenderSuggestions","trim","length","clearSuggestions","onChange","event","newValue","onSuggestionSelected","onSelectedSuggestion","inputProps","placeholder","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport SearchEngine from \"./SearchEngine\";\nimport '../../assets/css/search.scss';\n\nclass Suggestion extends React.Component {\n\n    render() {\n        if (this.props.suggestion.sentence)\n            return this.renderSentence();\n        else\n            return this.renderTopic();\n    }\n\n    renderSentence() {\n        return <>\n            <div className=\"suggestion-title\">{this.props.suggestion.topic.title}</div>\n            <div className=\"suggestion-sentence\">{this.props.suggestion.sentence}</div>\n            </>;\n    }\n\n    renderTopic() {\n        return <div className=\"suggestion-title\">{this.props.suggestion.title}</div>;\n    }\n}\n\n\nclass SearchBox extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: \"\", suggestions: []};\n    }\n\n    fetchSuggestions(data) {\n        if (data.reason === 'input-changed') {\n            const suggestions = SearchEngine.search(data.value);\n            this.setState({suggestions: suggestions});\n        }\n    }\n\n    getSuggestionValue(suggestion) {\n        return suggestion.topic.title;\n    }\n\n    renderSuggestion(suggestion) {\n        return <Suggestion suggestion={suggestion}/>;\n    }\n\n    shouldRenderSuggestions(value) {\n        return value.trim().length > 2;\n    }\n\n    clearSuggestions() {\n        this.setState({suggestions: []});\n    }\n\n    onChange(event, data) {\n        this.setState({value: data.newValue});\n    }\n\n    onSuggestionSelected(event, data) {\n        this.setState({value: \"\", suggestions: []}, ()=>this.props.onSelectedSuggestion(data.suggestion));\n    }\n\n    render() {\n        const inputProps = { placeholder: \"Search...\", value: this.state.value, onChange: this.onChange.bind(this) };\n        return <Autosuggest inputProps={inputProps}\n                            suggestions={this.state.suggestions}\n                            getSuggestionValue={this.getSuggestionValue.bind(this)}\n                            renderSuggestion={this.renderSuggestion.bind(this)}\n                            shouldRenderSuggestions={this.shouldRenderSuggestions.bind(this)}\n                            highlightFirstSuggestion={true}\n                            onSuggestionsFetchRequested={this.fetchSuggestions.bind(this)}\n                            onSuggestionsClearRequested={this.clearSuggestions.bind(this)}\n                            onSuggestionSelected={this.onSuggestionSelected.bind(this)}\n        />;\n    }\n}\n\nexport default SearchBox;\n"]},"metadata":{},"sourceType":"module"}