{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/types/EnumerationType.js\";\nimport React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Enumeration\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enumerations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"An enumeration is a list of names for constant values of a particular type.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 91\n        }, this), \"Enumerations are practical to refer to values using symbols, rather than provide the same value again and again in your code.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 40\n        }, this), \"Prompto supports enumerations of both built-in and user defined types.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 87\n        }, this), \"This section describes enumerations of built-in types.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 71\n        }, this), \"The below is an example:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n          sampleUrl: \"samples/types/enums/direction.pec\"\n        }, PromptoPlayer.nextKey(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Enumerated symbols are global definitions. You cannot redefine the above name \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"NORTH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 22\n        }, this), \" elsewhere.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 51\n        }, this), \"Enumeration symbols must be composed of uppercase letters, digits and '_' only. The first character cannot be a digit.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 35\n        }, this), \"This makes it easy to recognize enumerated symbols at first glance.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 84\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Once an enumerated symbol is defined, it can be used anywhere in place of the value itself.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n          sampleUrl: \"samples/types/enums/usage.pec\",\n          runnable: true\n        }, PromptoPlayer.nextKey(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enumeration attributes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Each enumerated symbol has the following attributes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), \": returns the name of the enumerated symbol as a Text value\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), \": returns the value represented by the enumerated symbol. The exact type of the value is determined by the exact type of the enumeration\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The enumeration itself has the following attributes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"symbols\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), \": returns a List of the symbols in the enumeration\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n          lines: 12,\n          sampleUrl: \"samples/types/enums/attributes.pec\",\n          runnable: true\n        }, PromptoPlayer.nextKey(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enumerations of user defined types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Prompto supports Enumerations of user defined types. See Categories for details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/types/EnumerationType.js"],"names":["React","PromptoPlayer","Topic","ThisTopic","constructor","renderContent","topicSelected","nextKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;;AAEA,MAAMC,SAAN,SAAwBD,KAAxB,CAA8B;AAE1BE,EAAAA,WAAW,GAAG;AACV,UAAM,aAAN;AACH;;AAEDC,EAAAA,aAAa,CAACC,aAAD,EAAgB;AACzB,wBAAO;AAAA,8BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAGH;AAAA,+GAA8E;AAAA;AAAA;AAAA;AAAA,gBAA9E,gJAE2B;AAAA;AAAA;AAAA;AAAA,gBAF3B,yFAG0E;AAAA;AAAA;AAAA;AAAA,gBAH1E,yEAI0D;AAAA;AAAA;AAAA;AAAA,gBAJ1D;AAAA;AAAA;AAAA;AAAA;AAAA,cAHG,eAUH;AAAA,+BACI,QAAC,aAAD;AAA6C,UAAA,SAAS,EAAC;AAAvD,WAAoBL,aAAa,CAACM,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVG,eAaH;AAAA;AAAA;AAAA;AAAA,cAbG,eAcH;AAAA,kHACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADT,8BACsC;AAAA;AAAA;AAAA;AAAA,gBADtC,yIAGsB;AAAA;AAAA;AAAA;AAAA,gBAHtB,sFAIuE;AAAA;AAAA;AAAA;AAAA,gBAJvE;AAAA;AAAA;AAAA;AAAA;AAAA,cAdG,eAoBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBG,eAqBH;AAAA,+BACI,QAAC,aAAD;AAA6C,UAAA,SAAS,EAAC,+BAAvD;AAAuF,UAAA,QAAQ,EAAE;AAAjG,WAAoBN,aAAa,CAACM,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cArBG,eAyBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBG,eA4BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BG,eA6BH;AAAA,gCACI;AAAA,kCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,kCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BG,eAoCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCG,eAqCH;AAAA,gCACI;AAAA,kCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,aAAD;AAA6C,UAAA,KAAK,EAAE,EAApD;AAAwD,UAAA,SAAS,EAAC,oCAAlE;AAAuG,UAAA,QAAQ,EAAE;AAAjH,WAAoBN,aAAa,CAACM,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArCG,eAyCH;AAAA;AAAA;AAAA;AAAA,cAzCG,eA2CH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CG,eA4CH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5CG;AAAA,oBAAP;AA8CH;;AArDyB;;AAyD9B,eAAe,IAAIJ,SAAJ,EAAf","sourcesContent":["import React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Enumeration\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n            <h2>Enumerations</h2>\n\n            <p>An enumeration is a list of names for constant values of a particular type.<br/>\n                Enumerations are practical to refer to values using symbols, rather than provide the same value again\n                and again in your code.<br/>\n                Prompto supports enumerations of both built-in and user defined types.<br/>\n                This section describes enumerations of built-in types.<br/>\n                The below is an example:\n            </p>\n            <ul>\n                <PromptoPlayer key={PromptoPlayer.nextKey()} sampleUrl=\"samples/types/enums/direction.pec\"/>\n            </ul>\n            <br/>\n            <p>Enumerated symbols are global definitions. You cannot redefine the above\n                name <code>NORTH</code> elsewhere.<br/>\n                Enumeration symbols must be composed of uppercase letters, digits and '_' only. The first character\n                cannot be a digit.<br/>\n                This makes it easy to recognize enumerated symbols at first glance.<br/>\n            </p>\n            <p>Once an enumerated symbol is defined, it can be used anywhere in place of the value itself.</p>\n            <ul>\n                <PromptoPlayer key={PromptoPlayer.nextKey()} sampleUrl=\"samples/types/enums/usage.pec\" runnable={true}/>\n            </ul>\n\n            <h3>\n                Enumeration attributes\n            </h3>\n            <p>Each enumerated symbol has the following attributes:</p>\n            <ul>\n                <li><code>name</code>: returns the name of the enumerated symbol as a Text value</li>\n                <li><code>value</code>: returns the value represented by the enumerated symbol.\n                    The exact type of the value is determined by the exact type of the enumeration\n                </li>\n            </ul>\n\n            <p>The enumeration itself has the following attributes:</p>\n            <ul>\n                <li><code>symbols</code>: returns a List of the symbols in the enumeration</li>\n                <PromptoPlayer key={PromptoPlayer.nextKey()} lines={12} sampleUrl=\"samples/types/enums/attributes.pec\" runnable={true}/>\n            </ul>\n            <br/>\n\n            <h3>Enumerations of user defined types</h3>\n            <p>Prompto supports Enumerations of user defined types. See Categories for details.</p>\n        </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}