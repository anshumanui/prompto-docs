{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/expressions/Contain.js\";\nimport React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Contain\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contain expressions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Contain expressions are used to check if a value is a member of a collection value.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 99\n        }, this), \"An membership expression is a code fragment which produces a \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Boolean\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 78\n        }, this), \" value, which can then be used as an input for other operations: print, write, method call and so forth.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 98\n        }, this), \"Contain expressions can have one of the following forms:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 27\n            }, this), \" in \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 62\n          }, this), \" is any value and \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), \" is a collection\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 27\n            }, this), \" has \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 63\n          }, this), \" is any value and \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), \" is a collection\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 27\n            }, this), \" has any \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 27\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 53\n          }, this), \" are collections\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 27\n            }, this), \" has all \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 27\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 53\n          }, this), \" are collections\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Or the negative forms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 27\n            }, this), \" not in \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 66\n          }, this), \" is any value and \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), \" is a collection\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 27\n            }, this), \" not has \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 73\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 67\n          }, this), \" is any value and \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 112\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 106\n          }, this), \" is a collection\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 27\n            }, this), \" not has any \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 77\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 71\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 103\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 97\n          }, this), \" are collections\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 27\n            }, this), \" not has all \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 77\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 71\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 103\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 97\n          }, this), \" are collections\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Text Contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Text Contain expressions check whether a Character or Text value belongs to a given Text value.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 111\n        }, this), \"When checking for \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"any\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 35\n        }, this), \" or \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 55\n        }, this), \", the collection of characters can be specified using a Text, which is then treated as collection of characters.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 14,\n        sampleUrl: \"samples/expressions/contain-text.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Range Contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Range Contain expressions check whether a value belongs to a given Range value.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 8,\n        sampleUrl: \"samples/expressions/contain-range.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"List Contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"List Contain expressions check whether a value belongs to a given List value.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 8,\n        sampleUrl: \"samples/expressions/contain-list.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Set Contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Set Contain expressions check whether a value belongs to a given Set value.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 8,\n        sampleUrl: \"samples/expressions/contain-set.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tuple Contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tuple Contain expressions check whether a value belongs to a given Tuple value.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 8,\n        sampleUrl: \"samples/expressions/contain-tuple.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Dictionary Contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dictionary Contain expressions check whether a Dictionary value contains a given Text key.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 106\n        }, this), \"They are equivalent to using Set Contain expressions on \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"dict\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 79\n          }, this), \".keys\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 73\n        }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 103\n        }, this), \"To check for value contain, you should use Contain expressions on \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"dict\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 89\n          }, this), \".values\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 83\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/expressions/Contain.js"],"names":["React","PromptoPlayer","Topic","ThisTopic","constructor","renderContent","topicSelected","nextKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Contain\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n\n            <h2>Contain expressions</h2>\n\n            <p>Contain expressions are used to check if a value is a member of a collection value.<br/>\n                An membership expression is a code fragment which produces a <code>Boolean</code> value, which can then\n                be used as an input for other operations: print, write, method call and so forth.<br/>\n                Contain expressions can have one of the following forms:</p>\n            <ul>\n                <li><code><i>a</i> in <i>b</i></code>, where <code><i>a</i></code> is any value\n                    and <code><i>b</i></code> is a collection\n                </li>\n                <li><code><i>b</i> has <i>a</i></code>, where <code><i>a</i></code> is any value\n                    and <code><i>b</i></code> is a collection\n                </li>\n                <li><code><i>a</i> has any <i>b</i></code>,\n                    where <code><i>a</i></code> and <code><i>b</i></code> are collections\n                </li>\n                <li><code><i>a</i> has all <i>b</i></code>,\n                    where <code><i>a</i></code> and <code><i>b</i></code> are collections\n                </li>\n            </ul>\n             <p>Or the negative forms:</p>\n            <ul>\n                <li><code><i>a</i> not in <i>b</i></code>, where <code><i>a</i></code> is any value\n                    and <code><i>b</i></code> is a collection\n                </li>\n                <li><code><i>b</i> not has <i>a</i></code>, where <code><i>a</i></code> is any value and <code><i>b</i></code> is\n                    a collection\n                </li>\n                <li><code><i>a</i> not has any <i>b</i></code>, where <code><i>a</i></code> and <code><i>b</i></code> are\n                    collections\n                </li>\n                <li><code><i>a</i> not has all <i>b</i></code>, where <code><i>a</i></code> and <code><i>b</i></code> are\n                    collections\n                </li>\n            </ul>\n            <br/>\n            <h3>\n                Text Contain\n            </h3>\n            <p>Text Contain expressions check whether a Character or Text value belongs to a given Text value.<br/>\n                When checking for <code>any</code> or <code>all</code>, the collection of characters can be specified\n                using a Text,\n                which is then treated as collection of characters.\n            </p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={14} sampleUrl=\"samples/expressions/contain-text.pec\" runnable={true}/>\n            <br/>\n\n            <h3>\n                Range Contain\n            </h3>\n            <p>Range Contain expressions check whether a value belongs to a given Range value.\n            </p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={8} sampleUrl=\"samples/expressions/contain-range.pec\" runnable={true}/>\n            <br/>\n\n            <h3>\n                List Contain\n            </h3>\n            <p>List Contain expressions check whether a value belongs to a given List value.\n            </p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={8} sampleUrl=\"samples/expressions/contain-list.pec\" runnable={true}/>\n            <br/>\n\n            <h3>\n                Set Contain\n            </h3>\n            <p>Set Contain expressions check whether a value belongs to a given Set value.\n            </p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={8} sampleUrl=\"samples/expressions/contain-set.pec\" runnable={true}/>\n            <br/>\n\n            <h3>\n                Tuple Contain\n            </h3>\n            <p>Tuple Contain expressions check whether a value belongs to a given Tuple value.\n            </p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={8} sampleUrl=\"samples/expressions/contain-tuple.pec\" runnable={true}/>\n            <br/>\n\n            <h3>\n                Dictionary Contain\n            </h3>\n            <p>Dictionary Contain expressions check whether a Dictionary value contains a given Text key.<br/>\n                They are equivalent to using Set Contain expressions on <code><i>dict</i>.keys</code>.<br/>\n                To check for value contain, you should use Contain expressions on <code><i>dict</i>.values</code>.\n            </p>\n\n            </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}