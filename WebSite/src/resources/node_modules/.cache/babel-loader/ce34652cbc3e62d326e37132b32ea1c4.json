{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/categories/methods/Arguments.js\";\nimport React from 'react';\nimport Topic from \"../../../../content/Topic\";\nimport PromptoPlayer from \"../../../../player/PromptoPlayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Arguments\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Category method arguments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A Prompto category method can accept 0 or more arguments.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Arguments must be declared (there is no implicit argument such as \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"arguments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 82\n        }, this), \" in JavaScript).\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"When mutiple arguments are declared, they must be separated by commas. In E dialect only, the last comma is replaced by the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"and\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 36\n        }, this), \" keyword.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Arguments are typed, in one of the following ways:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Attribute argument\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 24\n            }, this), \", with the form \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 71\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 65\n            }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 27\n            }, this), \" is an existing Attribute name.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n            lines: 12,\n            sampleUrl: \"samples/categories/methods/arguments-attribute.pec\",\n            runnable: true\n          }, PromptoPlayer.nextKey(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Typed argument\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 24\n            }, this), \", with the form \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"Type x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 61\n            }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 27\n            }, this), \" is an existing Type name and \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this), \" can be any valid variable identifier.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n            lines: 12,\n            sampleUrl: \"samples/categories/methods/arguments-typed.pec\",\n            runnable: true\n          }, PromptoPlayer.nextKey(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Anonymous type attribute argument\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 24\n            }, this), \", with the form \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: [\"any \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 90\n              }, this), \" with attribute \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 80\n            }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 27\n            }, this), \" can be any valid variable identifier and \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 36\n            }, this), \" is an existing Attribute name. This form accepts more than one attribute.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n            lines: 16,\n            sampleUrl: \"samples/categories/methods/arguments-anonymous.pec\",\n            runnable: true\n          }, PromptoPlayer.nextKey(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Extended type argument\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 24\n            }, this), \", with the form \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"Type x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 75\n              }, this), \" with attribute \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 69\n            }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 27\n            }, this), \" is an existing category name, \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 88\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 82\n            }, this), \" can be any valid variable identifier and \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 36\n            }, this), \" is an existing Attribute name. This form accepts more than one attribute.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n            lines: 16,\n            sampleUrl: \"samples/categories/methods/arguments-extended.pec\",\n            runnable: true\n          }, PromptoPlayer.nextKey(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Default argument values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Prompto supports \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }, this), \" argument values, which remove the need to always pass all arguments to a method.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Default argument values must be \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"constant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 48\n        }, this), \" values, i.e. they cannot vary during program execution. Good candidates are literals, null, and enumerated values.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 10,\n        sampleUrl: \"samples/categories/methods/arguments-default.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/categories/methods/Arguments.js"],"names":["React","Topic","PromptoPlayer","ThisTopic","constructor","renderContent","topicSelected","nextKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Topic from \"../../../../content/Topic\";\nimport PromptoPlayer from \"../../../../player/PromptoPlayer\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Arguments\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n\n            <h2>Category method arguments</h2>\n\n            <p>A Prompto category method can accept 0 or more arguments.</p>\n            <p>Arguments must be declared (there is no implicit argument such as <i>arguments</i> in JavaScript).</p>\n            <p>When mutiple arguments are declared, they must be separated by commas. In E dialect only, the last comma\n                is replaced by the <code>and</code> keyword.</p>\n            <p>Arguments are typed, in one of the following ways:</p>\n            <ul>\n                <li><p><b>Attribute argument</b>, with the form <code><i>name</i></code>,\n                    where <code><i>name</i></code> is\n                    an existing Attribute name.\n                </p>\n                    <PromptoPlayer key={PromptoPlayer.nextKey()} lines={12} sampleUrl=\"samples/categories/methods/arguments-attribute.pec\"\n                                   runnable={true}/>\n                    <br/>\n                </li>\n                <li><p><b>Typed argument</b>, with the form <code><i>Type x</i></code>,\n                    where <code><i>type</i></code> is an\n                    existing Type name\n                    and <code><i>x</i></code> can be any valid variable identifier.</p>\n                    <PromptoPlayer key={PromptoPlayer.nextKey()} lines={12} sampleUrl=\"samples/categories/methods/arguments-typed.pec\"\n                                   runnable={true}/>\n                    <br/>\n                </li>\n                <li><p><b>Anonymous type attribute argument</b>, with the form <code>any <i>x</i> with\n                    attribute <i>name</i></code>,\n                    where <code><i>x</i></code> can be any valid variable\n                    identifier and <code><i>name</i></code> is an existing Attribute name. This form accepts more than\n                    one\n                    attribute.</p>\n                    <PromptoPlayer key={PromptoPlayer.nextKey()} lines={16} sampleUrl=\"samples/categories/methods/arguments-anonymous.pec\"\n                                   runnable={true}/>\n                    <br/>\n                </li>\n                <li><p><b>Extended type argument</b>, with the form <code><i>Type x</i> with\n                    attribute <i>name</i></code>,\n                    where <code><i>type</i></code> is an existing category name, <code><i>x</i></code> can be any valid\n                    variable\n                    identifier and <code><i>name</i></code> is an existing Attribute name. This form accepts more than\n                    one\n                    attribute.</p>\n                    <PromptoPlayer key={PromptoPlayer.nextKey()} lines={16} sampleUrl=\"samples/categories/methods/arguments-extended.pec\"\n                                   runnable={true}/>\n                    <br/>\n                </li>\n            </ul>\n\n            <h4>Default argument values</h4>\n            <p>Prompto supports <i>default</i> argument values, which remove the need to always pass all\n                arguments to a method.</p>\n            <p>Default argument values must be <i>constant</i> values, i.e. they cannot vary during program execution. Good candidates\n                        are literals, null, and enumerated values.</p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={10} sampleUrl=\"samples/categories/methods/arguments-default.pec\" runnable={true}/>\n            <br/>\n\n       </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}