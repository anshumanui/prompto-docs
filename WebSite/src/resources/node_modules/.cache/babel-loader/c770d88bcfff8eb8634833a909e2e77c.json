{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/types/PeriodType.js\";\nimport React from 'react';\nimport Topic from \"../../../content/Topic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Period\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Period\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 20\n        }, this), \" type is a technical type used to represent a period of time, or a duration.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 115\n        }, this), \"A Period literal is formed by a 'P' followed by a sequence of integral quantities preceded by their unit, see examples.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 136\n        }, this), \"Day level units and time level units are separated by a 'T', as in DateTime literals.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 102\n        }, this), \"A Period literal conforms to the \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          href: \"http://www.iso.org/iso/home/standards/iso8601.htm\",\n          children: \"ISO 8601 format\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 50\n        }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 130\n        }, this), \"A Period literal must be enclosed in single quotes.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: String.raw`'PY3W2' -> 3 years + 2 weeks\n'PM4D1' -> 4 months + 1 day\n'PD1TH2' -> 1 day + 2 hours\n'PTM4S173' -> 4 minutes + 173 seconds`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/types/PeriodType.js"],"names":["React","Topic","ThisTopic","constructor","renderContent","topicSelected","String","raw"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;;AAEA,MAAMC,SAAN,SAAwBD,KAAxB,CAA8B;AAE1BE,EAAAA,WAAW,GAAG;AACV,UAAM,QAAN;AACH;;AAEDC,EAAAA,aAAa,CAACC,aAAD,EAAgB;AACzB,wBAAO;AAAA,8BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAGH;AAAA,wCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP,+FAAsG;AAAA;AAAA;AAAA;AAAA,gBAAtG,0IAC2H;AAAA;AAAA;AAAA;AAAA,gBAD3H,wGAEyF;AAAA;AAAA;AAAA;AAAA,gBAFzF,oDAGqC;AAAG,UAAA,MAAM,EAAC,QAAV;AAAmB,UAAA,GAAG,EAAC,qBAAvB;AACG,UAAA,IAAI,EAAC,mDADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHrC,oBAIqH;AAAA;AAAA;AAAA;AAAA,gBAJrH;AAAA;AAAA;AAAA;AAAA;AAAA,cAHG,eASC;AAAA,+BAAK;AAAA,oBAAOC,MAAM,CAACC,GAAI;AACvC;AACA;AACA;AAHqB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cATD,eAaH;AAAA;AAAA;AAAA;AAAA,cAbG;AAAA,oBAAP;AAeH;;AAtByB;;AA0B9B,eAAe,IAAIL,SAAJ,EAAf","sourcesContent":["import React from 'react';\nimport Topic from \"../../../content/Topic\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Period\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n            <h2>Period</h2>\n\n            <p>The <code>Period</code> type is a technical type used to represent a period of time, or a duration.<br/>\n                A Period literal is formed by a 'P' followed by a sequence of integral quantities preceded by their unit, see examples.<br/>\n                Day level units and time level units are separated by a 'T', as in DateTime literals.<br/>\n                A Period literal conforms to the <a target=\"_blank\" rel=\"noopener noreferrer\"\n                                                    href=\"http://www.iso.org/iso/home/standards/iso8601.htm\">ISO 8601 format</a>.<br/>\n                A Period literal must be enclosed in single quotes.</p>\n                <pre><code>{String.raw`'PY3W2' -> 3 years + 2 weeks\n'PM4D1' -> 4 months + 1 day\n'PD1TH2' -> 1 day + 2 hours\n'PTM4S173' -> 4 minutes + 173 seconds`}</code></pre>\n            <br/>\n            </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}