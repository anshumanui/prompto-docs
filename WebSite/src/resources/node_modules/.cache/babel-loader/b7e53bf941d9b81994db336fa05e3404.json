{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/expressions/Code.js\";\nimport React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Code\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Code expressions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Code expressions are expressions used to convey Prompto code fragments.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 87\n        }, this), \"A code expression is a code fragment which produces a Code value, which can then be used as an input for code invocations.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 34\n        }, this), \"A code expression has the form \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: [\"Code: \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 48\n        }, this), \", where \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 92\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 86\n        }, this), \" is a fragment of Prompto code. Code values are not storable.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"In the below example, we declare a method \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"myMethod\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 58\n        }, this), \" which accepts \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Code code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 94\n        }, this), \" as a parameter type.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 32\n        }, this), \"In the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 24\n        }, this), \" method, we instantiate a Code expression, which is then used as a parameter when calling \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"myMethod\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 30\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 12,\n        sampleUrl: \"samples/expressions/code.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"For security reasons, Code expressions can only be created from Prompto code, not from text.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 108\n        }, this), \"This ensures that methods receiving Code parameters are fully checked before execution time.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 109\n        }, this), \"A method receiving Code parameters can be seen as a Method template, instantiated when called with the actual Code expression.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/expressions/Code.js"],"names":["React","PromptoPlayer","Topic","ThisTopic","constructor","renderContent","topicSelected","nextKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;;AAEA,MAAMC,SAAN,SAAwBD,KAAxB,CAA8B;AAE1BE,EAAAA,WAAW,GAAG;AACV,UAAM,MAAN;AACH;;AAEDC,EAAAA,aAAa,CAACC,aAAD,EAAgB;AACzB,wBAAO;AAAA,8BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAGH;AAAA,2GAA0E;AAAA;AAAA;AAAA;AAAA,gBAA1E,6IAEqB;AAAA;AAAA;AAAA;AAAA,gBAFrB,kDAGmC;AAAA,4CAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHnC,2BAGyE;AAAA,iCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,gBAHzE;AAAA;AAAA;AAAA;AAAA;AAAA,cAHG,eAUH;AAAA,8EAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7C,kCAAiF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAjF,wCACmB;AAAA;AAAA;AAAA;AAAA,gBADnB,0BAEW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFX,6GAGiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAVG,eAeH,QAAC,aAAD;AAA6C,QAAA,KAAK,EAAE,EAApD;AAAwD,QAAA,SAAS,EAAC,8BAAlE;AAAiG,QAAA,QAAQ,EAAE;AAA3G,SAAoBL,aAAa,CAACM,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,cAfG,eAgBH;AAAA;AAAA;AAAA;AAAA,cAhBG,eAkBH;AAAA,gIAA+F;AAAA;AAAA;AAAA;AAAA,gBAA/F,+GACgG;AAAA;AAAA;AAAA;AAAA,gBADhG;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBG;AAAA,oBAAP;AA0BH;;AAjCyB;;AAqC1B,eAAe,IAAIJ,SAAJ,EAAf","sourcesContent":["import React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Code\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n            <h2>Code expressions</h2>\n\n            <p>Code expressions are expressions used to convey Prompto code fragments.<br/>\n                A code expression is a code fragment which produces a Code value, which can then be used as an input for\n                code invocations.<br/>\n                A code expression has the form <code>Code: <i>code</i></code>, where <code><i>code</i></code> is a\n                fragment of Prompto code.\n                Code values are not storable.\n            </p>\n            <p>In the below example, we declare a method <code>myMethod</code> which accepts <code>Code code</code> as a\n                parameter type.<br/>\n                In the <code>main</code> method, we instantiate a Code expression, which is then used as a parameter\n                when calling <code>myMethod</code>.\n            </p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={12} sampleUrl=\"samples/expressions/code.pec\" runnable={true}/>\n            <br/>\n\n            <p>For security reasons, Code expressions can only be created from Prompto code, not from text.<br/>\n                This ensures that methods receiving Code parameters are fully checked before execution time.<br/>\n                A method receiving Code parameters can be seen as a Method template, instantiated when called with the\n                actual Code expression.\n            </p>\n\n\n        </>;\n    }\n\n    }\n\n    export default new ThisTopic();"]},"metadata":{},"sourceType":"module"}