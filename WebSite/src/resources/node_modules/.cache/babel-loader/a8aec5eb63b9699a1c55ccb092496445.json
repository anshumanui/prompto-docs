{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/types/HtmlType.js\";\nimport React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Html\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Html\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Html\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 20\n        }, this), \" type is a technical type used for Html expressions.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Prompto supports \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          href: \"https://reactjs.org/docs/introducing-jsx.html\",\n          children: \"JSX-like syntax\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 33\n        }, this), \", where html tags, Prompto code and widget tags can be combined to render html dynamically.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Here is a simple example:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 4,\n        sampleUrl: \"samples/types/html/simple.pec\"\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Prompto does not let you \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 41\n        }, this), \" Html \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"per se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 62\n        }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 76\n        }, this), \"You cannot programmatically produce a \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: String.raw`<div/>`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 55\n        }, this), \" tag.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 93\n        }, this), \"Rather you call a method such as the above one, which returns the required Html.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You also cannot \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"store\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 32\n        }, this), \" Html. Html is for display only, through widgets.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Structure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Html code must comprise one and one only \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"root\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 57\n        }, this), \" tag, which may comprise children.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 102\n        }, this), \"Prompto does not yet support \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"fragments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 46\n        }, this), \", this is a desired feature, just not implemented yet.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Each tag can have attributes. An attribute can only appear once per tag.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 88\n        }, this), \"Each attribute must have a value, which can be either a Text, or a Prompto expression.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Rendering plain HTML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Although the HTML standard supports both lowercase and uppercase tags, Prompto requires that plain HTML tags be lowercase.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 138\n        }, this), \"For these, Prompto performs no processing of the tag itself. The Html value will be transpiled \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"as is\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 112\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 4,\n        sampleUrl: \"samples/types/html/plain-html.pec\"\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Rendering content dynamically\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Prompto supports setting content at runtime using a Prompto expression enclosed in curly braces.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 4,\n        sampleUrl: \"samples/types/html/dynamic-content.pec\"\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Rendering attributes dynamically\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Prompto supports setting attribute values at runtime using a Prompto expression enclosed in curly braces (which must provide a valid value for the attribute).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 4,\n        sampleUrl: \"samples/types/html/dynamic-attribute.pec\"\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Rendering tags dynamically\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Prompto supports rendering tags at runtime using a Prompto expression enclosed in curly braces (which must provide valid Html content).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"In the below example, we build a list of \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<div>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 57\n        }, this), \" tags dynamically from a list:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        sampleUrl: \"samples/types/html/dynamic-tag.pec\"\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"(note that the list itself is enclosed in a tag, following the requirement of one and one only root tag)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Rendering custom tags a.k.a. widgets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Prompto supports rendering custom tags a.k.a. widgets. Prompto requires that widget tags start with an uppercase letter.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Widgets are defined in Prompto code, see widgets section.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"In the below example, we render a widget named MyWidget.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 4,\n        sampleUrl: \"samples/types/html/widget.pec\"\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/types/HtmlType.js"],"names":["React","PromptoPlayer","Topic","ThisTopic","constructor","renderContent","topicSelected","nextKey","String","raw"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Html\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n            <h2>Html</h2>\n            <p>The <code>Html</code> type is a technical type used for Html expressions.</p>\n            <p>Prompto supports <a target=\"_blank\" rel=\"noopener noreferrer\"\n                                   href=\"https://reactjs.org/docs/introducing-jsx.html\">JSX-like syntax</a>, where html tags, Prompto code and widget tags can be combined to render html dynamically.</p>\n            <p>Here is a simple example:</p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={4} sampleUrl=\"samples/types/html/simple.pec\"/>\n            <br/>\n            <p>Prompto does not let you <i>generate</i> Html <i>per se</i>.<br/>\n                You cannot programmatically produce a <code>{String.raw`<div/>`}</code> tag.<br/>\n                Rather you call a method such as the above one, which returns the required Html.</p>\n            <p>You also cannot <i>store</i> Html. Html is for display only, through widgets.</p>\n\n            <h3>Structure</h3>\n            <p>Html code must comprise one and one only <i>root</i> tag, which may comprise children.<br/>\n                Prompto does not yet support <i>fragments</i>, this is a desired feature, just not implemented yet.\n            </p>\n            <p>Each tag can have attributes. An attribute can only appear once per tag.<br/>\n                Each attribute must have a value, which can be either a Text, or a Prompto expression.\n            </p>\n\n\n            <h3>Rendering plain HTML</h3>\n            <p>Although the HTML standard supports both lowercase and uppercase tags, Prompto requires that plain HTML tags be lowercase.<br/>\n                For these, Prompto performs no processing of the tag itself. The Html value will be transpiled <i>as is</i>.</p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={4} sampleUrl=\"samples/types/html/plain-html.pec\"/>\n            <br/>\n\n            <h3>Rendering content dynamically</h3>\n            <p>Prompto supports setting content at runtime using a Prompto expression enclosed in curly braces.</p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={4} sampleUrl=\"samples/types/html/dynamic-content.pec\"/>\n            <br/>\n\n\n            <h3>Rendering attributes dynamically</h3>\n            <p>Prompto supports setting attribute values at runtime using a Prompto expression enclosed in curly braces (which must provide a valid value for the attribute).</p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={4} sampleUrl=\"samples/types/html/dynamic-attribute.pec\"/>\n            <br/>\n\n            <h3>Rendering tags dynamically</h3>\n            <p>Prompto supports rendering tags at runtime using a Prompto expression enclosed in curly braces (which must provide valid Html content).</p>\n            <p>In the below example, we build a list of <code>&lt;div&gt;</code> tags dynamically from a list:</p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} sampleUrl=\"samples/types/html/dynamic-tag.pec\"/>\n            <p><i>(note that the list itself is enclosed in a tag, following the requirement of one and one only root tag)</i></p>\n            <br/>\n\n            <h3>Rendering custom tags a.k.a. widgets</h3>\n            <p>Prompto supports rendering custom tags a.k.a. widgets. Prompto requires that widget tags start with an uppercase letter.</p>\n            <p>Widgets are defined in Prompto code, see widgets section.</p>\n            <p>In the below example, we render a widget named MyWidget.</p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={4} sampleUrl=\"samples/types/html/widget.pec\"/>\n            <br/>\n\n\n        </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}