{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/categories/Categories.js\";\nimport React from 'react';\nimport Creating from \"./Creating\";\nimport Copying from \"./Copying\";\nimport Embedding from \"./Embedding\";\nimport Modifying from \"./Modifying\";\nimport Storing from \"./Storing\";\nimport Extending from \"./Extending\";\nimport Methods from \"./Methods\";\nimport Abstract from \"./Abstract\";\nimport Topic from \"../../../content/Topic\";\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Categories\", [Creating, Copying, Embedding, Modifying, Storing, Extending, Abstract, Methods]);\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Prompto lets developers define domain types using \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 66\n        }, this), \" types. A \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 19\n        }, this), \" type is defined by composing 1 or more attributes, and/or existing category types.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 23\n        }, this), \"A simple \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 26\n        }, this), \" type is defined by simply listing its attributes, as follows:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 8,\n        sampleUrl: \"samples/categories/example.pec\"\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"On top of composing attributes, categories also support dedicated methods.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: [\"Prompto categories play a role similar to \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 61\n          }, this), \" in OOP languages.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/categories/Categories.js"],"names":["React","Creating","Copying","Embedding","Modifying","Storing","Extending","Methods","Abstract","Topic","PromptoPlayer","ThisTopic","constructor","renderContent","topicSelected","nextKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;;;AAEA,MAAMC,SAAN,SAAwBF,KAAxB,CAA8B;AAE1BG,EAAAA,WAAW,GAAG;AACV,UAAM,YAAN,EAAoB,CAAEX,QAAF,EAAYC,OAAZ,EAAqBC,SAArB,EAAgCC,SAAhC,EAA2CC,OAA3C,EAAoDC,SAApD,EAA+DE,QAA/D,EAAyED,OAAzE,CAApB;AACH;;AAEDM,EAAAA,aAAa,CAACC,aAAD,EAAgB;AACzB,wBAAO;AAAA,8BAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFG,eAIH;AAAA,sFAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAArD,6BACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADN,sGAEU;AAAA;AAAA;AAAA;AAAA,gBAFV,4BAGa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHb;AAAA;AAAA;AAAA;AAAA;AAAA,cAJG,eASH,QAAC,aAAD;AAA6C,QAAA,KAAK,EAAE,CAApD;AAAuD,QAAA,SAAS,EAAC;AAAjE,SAAoBJ,aAAa,CAACK,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,cATG,eAUH;AAAA;AAAA;AAAA;AAAA,cAVG,eAWH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXG,eAYH;AAAA,+BAAG;AAAA,gFAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAZG;AAAA,oBAAP;AAeH;;AAtByB;;AA0B9B,eAAe,IAAIJ,SAAJ,EAAf","sourcesContent":["import React from 'react';\nimport Creating from \"./Creating\";\nimport Copying from \"./Copying\";\nimport Embedding from \"./Embedding\";\nimport Modifying from \"./Modifying\";\nimport Storing from \"./Storing\";\nimport Extending from \"./Extending\";\nimport Methods from \"./Methods\";\nimport Abstract from \"./Abstract\";\nimport Topic from \"../../../content/Topic\";\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Categories\", [ Creating, Copying, Embedding, Modifying, Storing, Extending, Abstract, Methods ]);\n    }\n\n    renderContent(topicSelected) {\n        return <>\n\n            <h2>Categories</h2>\n\n            <p>Prompto lets developers define domain types using <i>category</i> types.\n                A <i>category</i> type is defined by composing 1 or more attributes, and/or existing category\n                types.<br/>\n                A simple <i>category</i> type is defined by simply listing its attributes, as follows:\n            </p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={8} sampleUrl=\"samples/categories/example.pec\"/>\n            <br/>\n            <p>On top of composing attributes, categories also support dedicated methods.</p>\n            <p><i>Prompto categories play a role similar to <code>classes</code> in OOP languages.</i></p>\n\n            </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}