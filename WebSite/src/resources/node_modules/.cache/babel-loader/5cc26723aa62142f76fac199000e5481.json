{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/dialects.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dialects() {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"uk-text-capitalize\",\n      children: \"Prompto dialects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Information technologists can have very different backgrounds.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 78\n      }, this), \"Some are very technical, with strong skills in OOP languages such as Java or C#.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 97\n      }, this), \"Some have grown their programming skills from scripting languages such as Python.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 98\n      }, this), \"Others have little or no coding experience, and work more on functional specifications, project management or testing.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 39\n      }, this), \"All these information technologists participate actively in the development.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 93\n      }, this), \"At Prompto, we believe they are all developers, and should have equal access to code.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Syntax is a detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"To facilitate the conversation between all breeds of developers, Prompto comes with not one \\\"language\\\" but three.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 23\n      }, this), \"Prompto calls these dialects, as they are not independant languages, but rather 3 syntactic variations of the same language concepts.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 47\n      }, this), \"Prompto dialects are a collaborative tool which helps technologists work together.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 99\n      }, this), \"They eliminate the barrier of having to learn a formal grammar only to read code.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 98\n      }, this), \"They make it very easy for any developer to adopt the Prompto platform, whatever his/her coding background.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"The Objy dialect aka \\\"O\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Objy uses a syntax that tries to follow as much as possible the syntax of OOP languages such as C++, Java or C#.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 23\n      }, this), \"Since Prompto introduces new concepts, the Objy syntax sometimes differs from these languages.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 111\n      }, this), \"But structuring elements are very similar: semi-colons to end statements, curly braces to group multiple statements, etc...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 35\n      }, this), \"Here is an example:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        children: String.raw`method main() {\n    print(\"15 + 3.5\");\n    print(\"= 28.5\");\n}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"The Monty dialect aka \\\"M\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Monty uses a syntax that tries to follow as much as possible the syntax of the Python 3 language.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 113\n      }, this), \"Since Prompto introduces new concepts, the Monty syntax sometimes differs from the Python 3 syntax.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 116\n      }, this), \"But structuring elements are very similar: one statement per line, colon and indentation to group multiple statements, etc...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 35\n      }, this), \"Here is an example:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        children: String.raw`def main(options:Text<:>):\n    print(\"15 + 3.5\")\n    print(\"= 28.5\")`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"The Engly dialect aka \\\"E\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Engly is a syntax that mimics English as much as possible.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 74\n      }, this), \"The intent is that developers with little or no coding background should be able to read code without having to learn the formalism of other dialects.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 65\n      }, this), \"The structure is very similar to Monty. Additionaly, it removes parenthesis, and many keywords are replaced by plain English words.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 49\n      }, this), \"Here is an example:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        children: String.raw`define main as method doing:\n    print \"15 + 3.5\"\n    print \"= 28.5\"`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Seamless translation between dialects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Prompto tools provide seamless translation from one dialect to another.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 87\n      }, this), \"Practically, you simply need to select the dialect of your choice.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 83\n      }, this), \"This makes it very easy for any developer to view any code in his/her preferred dialect.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 105\n      }, this), \"It also makes it very easy for a developer to switch dialect in the future, since no rewriting is needed.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 24\n      }, this), \"You can experience this translation by exploring the examples in this documentation.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 3\n  }, this);\n}\n_c = Dialects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialects\");","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/dialects.js"],"names":["Dialects","String","raw"],"mappings":";;AAAA,eAAe,SAASA,QAAT,GAAoB;AAClC,sBACC;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAGU;AAAA,gGAAiE;AAAA;AAAA;AAAA;AAAA,cAAjE,mGACoF;AAAA;AAAA;AAAA;AAAA,cADpF,oGAEqF;AAAA;AAAA;AAAA;AAAA,cAFrF,yIAI0B;AAAA;AAAA;AAAA;AAAA,cAJ1B,+FAKgF;AAAA;AAAA;AAAA;AAAA,cALhF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHV,eAYU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZV,eAcU;AAAA,qJAEU;AAAA;AAAA;AAAA;AAAA,cAFV,wJAIkC;AAAA;AAAA;AAAA;AAAA,cAJlC,qGAKsF;AAAA;AAAA;AAAA;AAAA,cALtF,oGAMqF;AAAA;AAAA;AAAA;AAAA,cANrF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdV,eAyBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBV,eA2BU;AAAA,kJACU;AAAA;AAAA;AAAA;AAAA,cADV,iHAEkG;AAAA;AAAA;AAAA;AAAA,cAFlG,8IAIsB;AAAA;AAAA;AAAA;AAAA,cAJtB,sCAKuB;AAAA;AAAA;AAAA;AAAA,cALvB;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BV,eAkCU;AAAA,6BAAK;AAAA,kBAAOC,MAAM,CAACC,GAAI;AACnC;AACA;AACA;AAHiB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAlCV,eAuCU;AAAA;AAAA;AAAA;AAAA,YAvCV,eAyCU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzCV,eA2CU;AAAA,mIAAoG;AAAA;AAAA;AAAA;AAAA,cAApG,sHACuG;AAAA;AAAA;AAAA;AAAA,cADvG,gJAIsB;AAAA;AAAA;AAAA;AAAA,cAJtB,sCAKuB;AAAA;AAAA;AAAA;AAAA,cALvB;AAAA;AAAA;AAAA;AAAA;AAAA,YA3CV,eAkDU;AAAA,6BAAK;AAAA,kBAAOD,MAAM,CAACC,GAAI;AACnC;AACA;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAlDV,eAqDU;AAAA;AAAA;AAAA;AAAA,YArDV,eAsDU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtDV,eAwDU;AAAA,4FAA6D;AAAA;AAAA;AAAA;AAAA,cAA7D,yKAEoD;AAAA;AAAA;AAAA;AAAA,cAFpD,sJAIoC;AAAA;AAAA;AAAA;AAAA,cAJpC,sCAKuB;AAAA;AAAA;AAAA;AAAA,cALvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAxDV,eA+DU;AAAA,6BAAK;AAAA,kBAAOD,MAAM,CAACC,GAAI;AACnC;AACA;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YA/DV,eAkEU;AAAA;AAAA;AAAA;AAAA,YAlEV,eAoEU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApEV,eAsEU;AAAA,yGAA0E;AAAA;AAAA;AAAA;AAAA,cAA1E,qFACsE;AAAA;AAAA;AAAA;AAAA,cADtE,2GAE4F;AAAA;AAAA;AAAA;AAAA,cAF5F,4HAIW;AAAA;AAAA;AAAA;AAAA,cAJX;AAAA;AAAA;AAAA;AAAA;AAAA,YAtEV;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgFA;KAjFuBF,Q","sourcesContent":["export default function Dialects() {\n\treturn (\n\t\t<li>\n\t\t\t<h2 className=\"uk-text-capitalize\">Prompto dialects</h2>\n\n            <p>Information technologists can have very different backgrounds.<br/>\n                Some are very technical, with strong skills in OOP languages such as Java or C#.<br/>\n                Some have grown their programming skills from scripting languages such as Python.<br/>\n                Others have little or no coding experience, and work more on functional specifications, project\n                management or testing.<br/>\n                All these information technologists participate actively in the development.<br/>\n                At Prompto, we believe they are all developers, and should have equal access to code.\n            </p>\n\n            <h2>Syntax is a detail</h2>\n\n            <p>To facilitate the conversation between all breeds of developers, Prompto comes with not one \"language\"\n                but\n                three.<br/>\n                Prompto calls these dialects, as they are not independant languages, but rather 3 syntactic variations\n                of the same language concepts.<br/>\n                Prompto dialects are a collaborative tool which helps technologists work together.<br/>\n                They eliminate the barrier of having to learn a formal grammar only to read code.<br/>\n                They make it very easy for any developer to adopt the Prompto platform, whatever his/her coding\n                background.\n            </p>\n\n            <h2>The Objy dialect aka \"O\"</h2>\n\n            <p>Objy uses a syntax that tries to follow as much as possible the syntax of OOP languages such as C++, Java\n                or C#.<br/>\n                Since Prompto introduces new concepts, the Objy syntax sometimes differs from these languages.<br/>\n                But structuring elements are very similar: semi-colons to end statements, curly braces to group multiple\n                statements, etc...<br/>\n                Here is an example:<br/>\n            </p>\n            <pre><code>{String.raw`method main() {\n    print(\"15 + 3.5\");\n    print(\"= 28.5\");\n}`}\n            </code></pre>\n            <p/>\n\n            <h2>The Monty dialect aka \"M\"</h2>\n\n            <p>Monty uses a syntax that tries to follow as much as possible the syntax of the Python 3 language.<br/>\n                Since Prompto introduces new concepts, the Monty syntax sometimes differs from the Python 3 syntax.<br/>\n                But structuring elements are very similar: one statement per line, colon and indentation to group\n                multiple\n                statements, etc...<br/>\n                Here is an example:<br/>\n            </p>\n            <pre><code>{String.raw`def main(options:Text<:>):\n    print(\"15 + 3.5\")\n    print(\"= 28.5\")`}</code></pre>\n            <p/>\n            <h2>The Engly dialect aka \"E\"</h2>\n\n            <p>Engly is a syntax that mimics English as much as possible.<br/>\n                The intent is that developers with little or no coding background should be able to read code without\n                having to learn the formalism of other dialects.<br/>\n                The structure is very similar to Monty. Additionaly, it removes parenthesis, and many keywords are\n                replaced by plain English words.<br/>\n                Here is an example:<br/>\n            </p>\n            <pre><code>{String.raw`define main as method doing:\n    print \"15 + 3.5\"\n    print \"= 28.5\"`}</code></pre>\n            <p/>\n\n            <h2>Seamless translation between dialects</h2>\n\n            <p>Prompto tools provide seamless translation from one dialect to another.<br/>\n                Practically, you simply need to select the dialect of your choice.<br/>\n                This makes it very easy for any developer to view any code in his/her preferred dialect.<br/>\n                It also makes it very easy for a developer to switch dialect in the future, since no rewriting is\n                needed.<br/>\n                You can experience this translation by exploring the examples in this documentation.\n            </p>\n\t\t</li>\n\t)\n}"]},"metadata":{},"sourceType":"module"}