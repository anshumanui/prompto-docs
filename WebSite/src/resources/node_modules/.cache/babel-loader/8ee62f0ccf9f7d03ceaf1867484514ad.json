{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/libraries/topics/console/printLine.js\";\nimport React from 'react';\nimport Topic from \"../../../content/Topic\";\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"printLine\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"printLine \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"Any value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This method has the following prototype:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: \"define printLine as method receiving any value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"printLine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 28\n        }, this), \" method accepts any type of value, and will convert it to Text by calling its built-in \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 131\n        }, this), \" attribute.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 159\n        }, this), \"It sends the output to the ConsoleWriter, followed by a carriage return.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        sampleUrl: \"samples/console/printLineAny.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"printLine \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"Any value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 35\n        }, this), \" to a \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"Writer writer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This method has the following prototype:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: \"define printLine as method receiving any value and Writer writer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"print\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 28\n        }, this), \" method accepts any type of value, and will convert it to Text by calling its built-in \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 127\n        }, this), \" attribute.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 155\n        }, this), \"It sends the output to the writer, followed by a carriage return. This can be convenient to send the output to the error output.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        sampleUrl: \"samples/console/printLineAnyWriter.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/libraries/topics/console/printLine.js"],"names":["React","Topic","PromptoPlayer","ThisTopic","constructor","renderContent","topicSelected","nextKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;;AAEA,MAAMC,SAAN,SAAwBF,KAAxB,CAA8B;AAE1BG,EAAAA,WAAW,GAAG;AACV,UAAM,WAAN;AACH;;AAEDC,EAAAA,aAAa,CAACC,aAAD,EAAgB;AACzB,wBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,8BACK;AAAA,8CAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFL,eAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHL,eAIK;AAAA,wCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP,0GAA8G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA9G,8BAA0I;AAAA;AAAA;AAAA;AAAA,gBAA1I;AAAA;AAAA;AAAA;AAAA;AAAA,cAJL,eAOK,QAAC,aAAD;AAA6C,QAAA,SAAS,EAAC,kCAAvD;AAA0F,QAAA,QAAQ,EAAE;AAApG,SAAoBJ,aAAa,CAACK,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,cAPL,eASK;AAAA,8CAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAd,yBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cATL,eAUK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVL,eAWK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXL,eAYK;AAAA,wCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP,0GAA0G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1G,8BAAsI;AAAA;AAAA;AAAA;AAAA,gBAAtI;AAAA;AAAA;AAAA;AAAA;AAAA,cAZL,eAeK,QAAC,aAAD;AAA6C,QAAA,SAAS,EAAC,wCAAvD;AAAgG,QAAA,QAAQ,EAAE;AAA1G,SAAoBL,aAAa,CAACK,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,cAfL;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAkBH;;AAzByB;;AA6B9B,eAAe,IAAIJ,SAAJ,EAAf","sourcesContent":["import React from 'react';\nimport Topic from \"../../../content/Topic\";\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"printLine\");\n    }\n\n    renderContent(topicSelected) {\n        return <React.Fragment>\n                    <h2>printLine <i>Any value</i></h2>\n                    <p>This method has the following prototype:</p>\n                    <pre>define printLine as method receiving any value</pre>\n                    <p>The <i>printLine</i> method accepts any type of value, and will convert it to Text by calling its built-in <code>text</code> attribute.<br/>\n                        It sends the output to the ConsoleWriter, followed by a carriage return.\n                    </p>\n                    <PromptoPlayer key={PromptoPlayer.nextKey()} sampleUrl=\"samples/console/printLineAny.pec\" runnable={true}/>\n\n                    <h2>printLine <i>Any value</i> to a <i>Writer writer</i></h2>\n                    <p>This method has the following prototype:</p>\n                    <pre>define printLine as method receiving any value and Writer writer</pre>\n                    <p>The <i>print</i> method accepts any type of value, and will convert it to Text by calling its built-in <code>text</code> attribute.<br/>\n                        It sends the output to the writer, followed by a carriage return. This can be convenient to send the output to the error output.\n                    </p>\n                    <PromptoPlayer key={PromptoPlayer.nextKey()} sampleUrl=\"samples/console/printLineAnyWriter.pec\" runnable={true}/>\n\n                </React.Fragment>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}