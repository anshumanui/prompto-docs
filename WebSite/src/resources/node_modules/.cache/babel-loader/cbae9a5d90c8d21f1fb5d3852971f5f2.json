{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/Enumerations.js\";\nimport React from 'react';\nimport PromptoPlayer from \"../../player/PromptoPlayer\";\nimport Topic from \"../../content/Topic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Enumerations\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Category enumerations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"An enumeration is a list of names for constant values of a particular type.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 91\n        }, this), \"Enumerations are practical to refer to values using symbols, rather than provide the same value again and again in your code.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 40\n        }, this), \"Prompto supports enumerations of both built-in and category types.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 83\n        }, this), \"This section describes enumerations of category types.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 71\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 10,\n        sampleUrl: \"samples/enumerations/definition.pec\"\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Enumerated symbols are global definitions. You cannot redefine the above name \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"MOTORBIKE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 22\n        }, this), \" elsewhere.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 55\n        }, this), \"Enumeration symbols must be composed of uppercase letters, digits and '_' only. The first character cannot be a digit.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 35\n        }, this), \"This makes it easy to recognize enumerated symbols at first glance.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 84\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Once an enumerated symbol is defined, it can be used anywhere in place of the value itself.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 107\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 10,\n        sampleUrl: \"samples/enumerations/usage.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enumeration attributes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"On top of their category attributes, category enumeration values have the following attributes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), \": returns the name of the enumerated symbol as a Text value\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The enumeration itself has the following attributes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"symbols\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), \": returns a List of the symbols in the enumeration\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 12,\n        sampleUrl: \"samples/enumerations/attributes.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enumeration methods\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Category enumerations do not directly support methods. However, they can be derived from existing categories, making it easy to provide custom methods.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"In the below example, we:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"define a 'MobileDevice' category with a 'printSpeed' method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"define a 'Vehicle' enumeration which derives from 'MobileDevice'\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"call the 'printSpeed' method on an enumerated instance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 20,\n        sampleUrl: \"samples/enumerations/methods.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enumerations of built-in types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Prompto supports Enumerations of built-in types. See Types -> Enumeration for details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/Enumerations.js"],"names":["React","PromptoPlayer","Topic","ThisTopic","constructor","renderContent","topicSelected","nextKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PromptoPlayer from \"../../player/PromptoPlayer\";\nimport Topic from \"../../content/Topic\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Enumerations\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n\n            <h2>Category enumerations</h2>\n\n            <p>An enumeration is a list of names for constant values of a particular type.<br/>\n                Enumerations are practical to refer to values using symbols, rather than provide the same value again\n                and again in your code.<br/>\n                Prompto supports enumerations of both built-in and category types.<br/>\n                This section describes enumerations of category types.<br/>\n            </p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={10} sampleUrl=\"samples/enumerations/definition.pec\"/>\n            <br/>\n\n            <p>Enumerated symbols are global definitions. You cannot redefine the above\n                name <code>MOTORBIKE</code> elsewhere.<br/>\n                Enumeration symbols must be composed of uppercase letters, digits and '_' only. The first character\n                cannot be a digit.<br/>\n                This makes it easy to recognize enumerated symbols at first glance.<br/>\n            </p>\n            <p>Once an enumerated symbol is defined, it can be used anywhere in place of the value itself.<br/>\n            </p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={10} sampleUrl=\"samples/enumerations/usage.pec\" runnable={true}/>\n            <br/>\n\n            <h3>\n                Enumeration attributes\n            </h3>\n                <p>On top of their category attributes, category enumeration values have the following attributes:</p>\n            <ul>\n                <li><code>name</code>: returns the name of the enumerated symbol as a Text value</li>\n            </ul>\n            <p>The enumeration itself has the following attributes:</p>\n            <ul>\n                <li><code>symbols</code>: returns a List of the symbols in the enumeration</li>\n            </ul>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={12} sampleUrl=\"samples/enumerations/attributes.pec\" runnable={true}/>\n            <br/>\n\n           <h3>\n                Enumeration methods\n            </h3>\n            <p>Category enumerations do not directly support methods. However, they can be derived from existing\n                categories, making it easy to provide custom methods.</p>\n                <p>In the below example, we:</p>\n            <ul>\n                <li>define a 'MobileDevice' category with a 'printSpeed' method</li>\n                <li>define a 'Vehicle' enumeration which derives from 'MobileDevice'</li>\n                <li>call the 'printSpeed' method on an enumerated instance</li>\n            </ul>\n                <PromptoPlayer key={PromptoPlayer.nextKey()} lines={20} sampleUrl=\"samples/enumerations/methods.pec\" runnable={true}/>\n                <br/>\n\n            <h3>Enumerations of built-in types</h3>\n            <p>Prompto supports Enumerations of built-in types. See Types -&gt; Enumeration for details.</p>\n            </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}