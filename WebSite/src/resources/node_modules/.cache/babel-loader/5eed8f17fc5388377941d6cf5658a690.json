{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/Dialects.js\";\nimport React from 'react';\nimport Topic from \"../../content/Topic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Dialects\");\n  }\n\n  renderContent() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Prompto dialects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Information technologists can have very different backgrounds.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 78\n        }, this), \"Some are very technical, with strong skills in OOP languages such as Java or C#.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 97\n        }, this), \"Some have grown their programming skills from scripting languages such as Python.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 98\n        }, this), \"Others have little or no coding experience, and work more on functional specifications, project management or testing.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 39\n        }, this), \"All these information technologists participate actively in the development.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 93\n        }, this), \"At Prompto, we believe they are all developers, and should have equal access to code.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Syntax is a detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"To facilitate the conversation between all breeds of developers, Prompto comes with not one \\\"language\\\" but three.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 23\n        }, this), \"Prompto calls these dialects, as they are not independant languages, but rather 3 syntactic variations of the same language concepts.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 47\n        }, this), \"Prompto dialects are a collaborative tool which helps technologists work together.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 99\n        }, this), \"They eliminate the barrier of having to learn a formal grammar only to read code.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 98\n        }, this), \"They make it very easy for any developer to adopt the Prompto platform, whatever his/her coding background.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"The Objy dialect aka \\\"O\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Objy uses a syntax that tries to follow as much as possible the syntax of OOP languages such as C++, Java or C#.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 23\n        }, this), \"Since Prompto introduces new concepts, the Objy syntax sometimes differs from these languages.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 111\n        }, this), \"But structuring elements are very similar: semi-colons to end statements, curly braces to group multiple statements, etc...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 35\n        }, this), \"Here is an example:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: String.raw`method main() {\n    print(\"15 + 3.5\");\n    print(\"= 28.5\");\n}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"The Monty dialect aka \\\"M\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Monty uses a syntax that tries to follow as much as possible the syntax of the Python 3 language.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 113\n        }, this), \"Since Prompto introduces new concepts, the Monty syntax sometimes differs from the Python 3 syntax.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 116\n        }, this), \"But structuring elements are very similar: one statement per line, colon and indentation to group multiple statements, etc...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 35\n        }, this), \"Here is an example:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: String.raw`def main(options:Text<:>):\n    print(\"15 + 3.5\")\n    print(\"= 28.5\")`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"The Engly dialect aka \\\"E\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Engly is a syntax that mimics English as much as possible.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 74\n        }, this), \"The intent is that developers with little or no coding background should be able to read code without having to learn the formalism of other dialects.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 65\n        }, this), \"The structure is very similar to Monty. Additionaly, it removes parenthesis, and many keywords are replaced by plain English words.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 49\n        }, this), \"Here is an example:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: String.raw`define main as method doing:\n    print \"15 + 3.5\"\n    print \"= 28.5\"`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Seamless translation between dialects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Prompto tools provide seamless translation from one dialect to another.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 87\n        }, this), \"Practically, you simply need to select the dialect of your choice.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 83\n        }, this), \"This makes it very easy for any developer to view any code in his/her preferred dialect.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 105\n        }, this), \"It also makes it very easy for a developer to switch dialect in the future, since no rewriting is needed.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 24\n        }, this), \"You can experience this translation by exploring the examples in this documentation.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/Dialects.js"],"names":["React","Topic","ThisTopic","constructor","renderContent","String","raw"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Topic from \"../../content/Topic\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Dialects\");\n    }\n\n    renderContent() {\n        return <>\n            <h2>Prompto dialects</h2>\n\n            <p>Information technologists can have very different backgrounds.<br/>\n                Some are very technical, with strong skills in OOP languages such as Java or C#.<br/>\n                Some have grown their programming skills from scripting languages such as Python.<br/>\n                Others have little or no coding experience, and work more on functional specifications, project\n                management or testing.<br/>\n                All these information technologists participate actively in the development.<br/>\n                At Prompto, we believe they are all developers, and should have equal access to code.\n            </p>\n\n            <h2>Syntax is a detail</h2>\n\n            <p>To facilitate the conversation between all breeds of developers, Prompto comes with not one \"language\"\n                but\n                three.<br/>\n                Prompto calls these dialects, as they are not independant languages, but rather 3 syntactic variations\n                of the same language concepts.<br/>\n                Prompto dialects are a collaborative tool which helps technologists work together.<br/>\n                They eliminate the barrier of having to learn a formal grammar only to read code.<br/>\n                They make it very easy for any developer to adopt the Prompto platform, whatever his/her coding\n                background.\n            </p>\n\n            <h2>The Objy dialect aka \"O\"</h2>\n\n            <p>Objy uses a syntax that tries to follow as much as possible the syntax of OOP languages such as C++, Java\n                or C#.<br/>\n                Since Prompto introduces new concepts, the Objy syntax sometimes differs from these languages.<br/>\n                But structuring elements are very similar: semi-colons to end statements, curly braces to group multiple\n                statements, etc...<br/>\n                Here is an example:<br/>\n            </p>\n            <pre><code>{String.raw`method main() {\n    print(\"15 + 3.5\");\n    print(\"= 28.5\");\n}`}\n            </code></pre>\n            <p/>\n\n            <h2>The Monty dialect aka \"M\"</h2>\n\n            <p>Monty uses a syntax that tries to follow as much as possible the syntax of the Python 3 language.<br/>\n                Since Prompto introduces new concepts, the Monty syntax sometimes differs from the Python 3 syntax.<br/>\n                But structuring elements are very similar: one statement per line, colon and indentation to group\n                multiple\n                statements, etc...<br/>\n                Here is an example:<br/>\n            </p>\n            <pre><code>{String.raw`def main(options:Text<:>):\n    print(\"15 + 3.5\")\n    print(\"= 28.5\")`}</code></pre>\n            <p/>\n            <h2>The Engly dialect aka \"E\"</h2>\n\n            <p>Engly is a syntax that mimics English as much as possible.<br/>\n                The intent is that developers with little or no coding background should be able to read code without\n                having to learn the formalism of other dialects.<br/>\n                The structure is very similar to Monty. Additionaly, it removes parenthesis, and many keywords are\n                replaced by plain English words.<br/>\n                Here is an example:<br/>\n            </p>\n            <pre><code>{String.raw`define main as method doing:\n    print \"15 + 3.5\"\n    print \"= 28.5\"`}</code></pre>\n            <p/>\n\n            <h2>Seamless translation between dialects</h2>\n\n            <p>Prompto tools provide seamless translation from one dialect to another.<br/>\n                Practically, you simply need to select the dialect of your choice.<br/>\n                This makes it very easy for any developer to view any code in his/her preferred dialect.<br/>\n                It also makes it very easy for a developer to switch dialect in the future, since no rewriting is\n                needed.<br/>\n                You can experience this translation by exploring the examples in this documentation.\n            </p>\n        </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}