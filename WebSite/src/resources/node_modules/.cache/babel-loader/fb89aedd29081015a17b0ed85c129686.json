{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/expressions/Divide.js\";\nimport React from 'react';\nimport Topic from \"../../../content/Topic\";\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Divide\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Divide expressions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Divide expressions are used to divide 2 values.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 63\n        }, this), \"A divide expression is a code fragment which produces a value, whose type is determined by the values being subtracted, and which can then be used as an input for other operations: print, write, method call and so forth.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 30\n        }, this), \"A divide expression has the form \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"a / b\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 50\n        }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 69\n        }, this), \"Additionally, Prompto supports integer division, using the form \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"a \\\\ b\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 81\n        }, this), \", and remainder using the form \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"a % b\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 26\n        }, this), \" (also known as modulo).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 68\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Dividing Integer and Decimal values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Dividing Integer and Decimal values returns a Decimal value.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 10,\n        sampleUrl: \"samples/expressions/divide-number.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Integer division of Integer and Decimal values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Integer division of Integer and Decimal values returns an Integer value. The right-hand side must be an Integer.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 10,\n        sampleUrl: \"samples/expressions/int-divide.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Remainder of Integer values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Remainder of Integer values returns an Integer value.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        sampleUrl: \"samples/expressions/modulo-integer.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Remainder of Decimal values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Remainder of Decimal values returns a Decimal value.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        sampleUrl: \"samples/expressions/modulo-decimal.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Dividing user defined values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Prompto supports dividing user defined values. See categories for details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/expressions/Divide.js"],"names":["React","Topic","PromptoPlayer","ThisTopic","constructor","renderContent","topicSelected","nextKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;;;AAEA,MAAMC,SAAN,SAAwBF,KAAxB,CAA8B;AAE1BG,EAAAA,WAAW,GAAG;AACV,UAAM,QAAN;AACH;;AAEDC,EAAAA,aAAa,CAACC,aAAD,EAAgB;AACzB,wBAAO;AAAA,8BAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFG,eAIH;AAAA,mFAAkD;AAAA;AAAA;AAAA;AAAA,gBAAlD,+OAGiB;AAAA;AAAA;AAAA;AAAA,gBAHjB,oDAIqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJrC,oBAIwD;AAAA;AAAA;AAAA;AAAA,gBAJxD,mFAKoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALpE,kDAMa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANb,2CAMuD;AAAA;AAAA;AAAA;AAAA,gBANvD;AAAA;AAAA;AAAA;AAAA;AAAA,cAJG,eAYH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZG,eAeH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfG,eAiBH,QAAC,aAAD;AAA6C,QAAA,KAAK,EAAE,EAApD;AAAwD,QAAA,SAAS,EAAC,uCAAlE;AAA0G,QAAA,QAAQ,EAAE;AAApH,SAAoBJ,aAAa,CAACK,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,cAjBG,eAkBH;AAAA;AAAA;AAAA;AAAA,cAlBG,eAoBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBG,eAuBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBG,eA0BH,QAAC,aAAD;AAA6C,QAAA,KAAK,EAAE,EAApD;AAAyD,QAAA,SAAS,EAAC,oCAAnE;AAAwG,QAAA,QAAQ,EAAE;AAAlH,SAAoBL,aAAa,CAACK,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,cA1BG,eA2BH;AAAA;AAAA;AAAA;AAAA,cA3BG,eA6BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BG,eAgCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCG,eAiCH,QAAC,aAAD;AAA6C,QAAA,SAAS,EAAC,wCAAvD;AAAgG,QAAA,QAAQ,EAAE;AAA1G,SAAoBL,aAAa,CAACK,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,cAjCG,eAkCH;AAAA;AAAA;AAAA;AAAA,cAlCG,eAoCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCG,eAuCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCG,eAyCH,QAAC,aAAD;AAA6C,QAAA,SAAS,EAAC,wCAAvD;AAAgG,QAAA,QAAQ,EAAE;AAA1G,SAAoBL,aAAa,CAACK,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,cAzCG,eA0CH;AAAA;AAAA;AAAA;AAAA,cA1CG,eA4CH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5CG,eA8CH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CG;AAAA,oBAAP;AAkDH;;AAzDyB;;AA6D9B,eAAe,IAAIJ,SAAJ,EAAf","sourcesContent":["import React from 'react';\nimport Topic from \"../../../content/Topic\";\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Divide\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n\n            <h2>Divide expressions</h2>\n\n            <p>Divide expressions are used to divide 2 values.<br/>\n                A divide expression is a code fragment which produces a value, whose type is determined by the values\n                being subtracted, and which can then be used as an input for other operations: print, write, method call\n                and so forth.<br/>\n                A divide expression has the form <code>a / b</code>.<br/>\n                Additionally, Prompto supports integer division, using the form <code>a \\ b</code>, and remainder using\n                the form <code>a % b</code> (also known as modulo).<br/>\n            </p>\n            <h3>\n                Dividing Integer and Decimal values\n            </h3>\n            <p>Dividing Integer and Decimal values returns a Decimal value.\n            </p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={10} sampleUrl=\"samples/expressions/divide-number.pec\" runnable={true}/>\n            <br/>\n\n            <h3>\n                Integer division of Integer and Decimal values\n            </h3>\n            <p>Integer division of Integer and Decimal values returns an Integer value. The right-hand side must be an\n                Integer.\n            </p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={10}  sampleUrl=\"samples/expressions/int-divide.pec\" runnable={true}/>\n            <br/>\n\n            <h3>\n                Remainder of Integer values\n            </h3>\n            <p>Remainder of Integer values returns an Integer value.</p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} sampleUrl=\"samples/expressions/modulo-integer.pec\" runnable={true}/>\n            <br/>\n\n            <h3>\n                Remainder of Decimal values\n            </h3>\n            <p>Remainder of Decimal values returns a Decimal value.\n            </p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} sampleUrl=\"samples/expressions/modulo-decimal.pec\" runnable={true}/>\n            <br/>\n\n            <h3>Dividing user defined values</h3>\n\n            <p>Prompto supports dividing user defined values. See categories for details.</p>\n\n\n        </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}