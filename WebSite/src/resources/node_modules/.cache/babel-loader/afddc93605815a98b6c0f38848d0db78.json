{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/widgets/ReactProperties.js\";\nimport React from 'react';\nimport Topic from \"../../../content/Topic\";\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Properties\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"React widget properties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"React components often require properties in order to render meaningful content.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 96\n        }, this), \"Properties are often referred to as \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"props\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 53\n        }, this), \" in React literature.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 92\n        }, this), \"Properties are provided to the widget through attributes set on the Html tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"To access properties, React widgets come with 1 method:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"getProperties\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 41\n          }, this), \"The getProperties is a method that can be called from widget code. It returns a Document.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 110\n          }, this), \"Alternately, you can use the built-in \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"props\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 65\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 59\n          }, this), \" widget field.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"In the below example, we create a \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"Minimal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 50\n        }, this), \" widget, which renders a \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 89\n        }, this), \" dynamically.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 114\n        }, this), \"In the \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 24\n        }, this), \" widget, we set the \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 55\n        }, this), \" value, and pass it as a property to the \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"Minimal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 108\n        }, this), \" widget.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 18,\n        sampleUrl: \"samples/widgets/react-props.poc\"\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: [\"(there are plans to support the props field directly, but as of now, you need to call \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"getProperties\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 105\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/widgets/ReactProperties.js"],"names":["React","Topic","PromptoPlayer","ThisTopic","constructor","renderContent","topicSelected","nextKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;;;AAEA,MAAMC,SAAN,SAAwBF,KAAxB,CAA8B;AAE1BG,EAAAA,WAAW,GAAG;AACV,UAAM,YAAN;AACH;;AAEDC,EAAAA,aAAa,CAACC,aAAD,EAAgB;AACzB,wBAAO;AAAA,8BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAEH;AAAA,oHAAmF;AAAA;AAAA;AAAA;AAAA,gBAAnF,uDACwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADxC,wCAC+E;AAAA;AAAA;AAAA;AAAA,gBAD/E;AAAA;AAAA;AAAA;AAAA;AAAA,cAFG,eAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALG,eAMH;AAAA,+BACI;AAAA,kCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,eAAwB;AAAA;AAAA;AAAA;AAAA,kBAAxB,4GAC6F;AAAA;AAAA;AAAA;AAAA,kBAD7F,yDAE0C;AAAA,mCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,kBAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANG,eAYH;AAAA,sEAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAArC,4CAA4E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5E,gCAAqG;AAAA;AAAA;AAAA;AAAA,gBAArG,0BACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADX,uCAC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD1C,4DAC+F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD/F;AAAA;AAAA;AAAA;AAAA;AAAA,cAZG,eAcH,QAAC,aAAD;AAA6C,QAAA,KAAK,EAAE,EAApD;AAAwD,QAAA,SAAS,EAAC;AAAlE,SAAoBJ,aAAa,CAACK,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,cAdG,eAeH;AAAA,+BAAG;AAAA,4HAAyF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAfG;AAAA,oBAAP;AAkBH;;AAzByB;;AA6B9B,eAAe,IAAIJ,SAAJ,EAAf","sourcesContent":["import React from 'react';\nimport Topic from \"../../../content/Topic\";\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Properties\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n            <h2>React widget properties</h2>\n            <p>React components often require properties in order to render meaningful content.<br/>\n                Properties are often referred to as <code>props</code> in React literature.<br/>\n                Properties are provided to the widget through attributes set on the Html tag.</p>\n            <p>To access properties, React widgets come with 1 method:</p>\n            <ul>\n                <li><b>getProperties</b><br/>\n                    The getProperties is a method that can be called from widget code. It returns a Document.<br/>\n                    Alternately, you can use the built-in <code><i>props</i></code> widget field.\n                </li>\n            </ul>\n            <p>In the below example, we create a <i>Minimal</i> widget, which renders a <i>title</i> dynamically.<br/>\n                In the <i>Page</i> widget, we set the <i>title</i> value, and pass it as a property to the <i>Minimal</i> widget.</p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={18} sampleUrl=\"samples/widgets/react-props.poc\" />\n            <p><i>(there are plans to support the props field directly, but as of now, you need to call <code>getProperties</code>.</i></p>\n\n            </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}