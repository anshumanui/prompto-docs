{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/statements/Switch.js\";\nimport React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Switch\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Switch statements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"A switch statement is a way to change the flow of execution based on a variable value.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 102\n        }, this), \"A switch statement has the form \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: [\"switch on \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 49\n        }, this), \" followed by one or more\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: [\"when \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"value statements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this), \" where \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 71\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 65\n        }, this), \" is an expression,\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), \" is an expression compatible with \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 76\n        }, this), \", and \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"statements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), \" is a list of statements which will be executed whenever\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), \" matches \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 47\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Once the value is matched, and the corresponding statements are exectued, the flow of execution resumes at the end of the switch statement.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 10,\n        sampleUrl: \"samples/statements/switch.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Optionally, a switch statement can end with an \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"otherwise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 67\n        }, this), \" clause and list of statements, which will be executed when no previous \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 61\n        }, this), \" matches. The \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"otherwise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 100\n        }, this), \" clause must be after all the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"when\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 43\n        }, this), \" clauses.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 10,\n        sampleUrl: \"samples/statements/switch-otherwise.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Matching lists of values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Switch statements support matching list of values using \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: [\"when in \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"values\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 90\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 76\n        }, this), \" where \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"values\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 123\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 117\n        }, this), \"must be a collection.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 10,\n        sampleUrl: \"samples/statements/switch-list.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), \"Note: in Objy dialect, Prompto uses the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"switch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 57\n      }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 78\n      }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 100\n      }, this), \" keywords like in C++, Java and C#.\"]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/statements/Switch.js"],"names":["React","PromptoPlayer","Topic","ThisTopic","constructor","renderContent","topicSelected","nextKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Switch\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n            <h2>Switch statements</h2>\n\n            <p>A switch statement is a way to change the flow of execution based on a variable value.<br/>\n                A switch statement has the form <code>switch on <i>a</i></code> followed by one or more\n                <code>when <i>value statements</i></code> where <code><i>a</i></code> is an expression,\n                <code><i>value</i></code> is an expression compatible with <code><i>a</i></code>,\n                and <code><i>statements</i></code> is a list of statements which will be executed whenever\n                <code><i>a</i></code> matches <code><i>value</i></code>.</p>\n                 <p>Once the value is matched, and the corresponding statements are exectued, the flow of execution\n                    resumes at the end of the switch statement.\n                </p>\n                <PromptoPlayer key={PromptoPlayer.nextKey()} lines={10} sampleUrl=\"samples/statements/switch.pec\" runnable={true}/>\n                <br/>\n\n                <p>Optionally, a switch statement can end with an <code>otherwise</code> clause and list of statements,\n                    which will be executed when no previous <code><i>value</i></code> matches. The <code>otherwise</code> clause\n                    must be after all the <code>when</code> clauses.\n                </p>\n                <PromptoPlayer key={PromptoPlayer.nextKey()} lines={10} sampleUrl=\"samples/statements/switch-otherwise.pec\" runnable={true}/>\n                <br/>\n\n               <h3>\n                    Matching lists of values\n                </h3>\n\n                <p>Switch statements support matching list of values using <code>when in <i>values</i></code> where <code><i>values</i></code>\n                    must be a collection.\n                </p>\n                <PromptoPlayer key={PromptoPlayer.nextKey()} lines={10} sampleUrl=\"samples/statements/switch-list.pec\" runnable={true}/>\n\n                <br/>\n                Note: in Objy dialect, Prompto uses the <code>switch</code>, <code>case</code> and <code>default</code> keywords like in C++, Java and C#.\n            </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}