{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/widgets/Widgets.js\";\nimport React from 'react';\nimport ReactWidget from \"./ReactWidget\";\nimport ReactModal from \"./ReactModal\";\nimport Topic from \"../../../content/Topic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Widgets\", [ReactWidget, ReactModal]);\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Widgets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Prompto supports Widgets, a special type designed to render user interface.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"A widget is rendered by a rendering engine.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 59\n        }, this), \"A rendering engine can be browser based (React, Vue, Angular...), or more specialized (Cocoa Touch, Android UI ...).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 33\n        }, this), \"Here is a non exhaustive list of rendering engines:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Browser engines:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"React\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Vue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Ember\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Angular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"(the above can also be used by Electron)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"iOS engines:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Cocoa Touch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"React Native\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Android engines:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Android SDK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"React Native\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"MacOSX engines:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Cocoa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Windows engines:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: \"UWP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: \"WPF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: \"Windows Forms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" As of writing, Prompto only supports the React rendering engine.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Prompto widgets are not usable across rendering engines. This is unfortunate, but the lack of standardization in this space simply makes it impossible.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 74\n        }, this), \"You must therefore decide which engine to use when coding, this cannot be changed by configuration.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Due to the above, a \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"widget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 36\n        }, this), \" must extend the base widget type of the selected rendering engine, and providing the methods required by the base widget.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rendering occurs when a top most widget (such as a web page) is displayed.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 90\n        }, this), \"At that point, the engine obtains the contents to display from the widget.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 91\n        }, this), \"For example, the React engine will call the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"render\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 61\n        }, this), \" method of the page widget (which must return Html).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 30\n        }, this), \"From there, if the returned Html contains widgets, they will in turn be rendered.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A widget cannot be instantiated in code i.e. you cannot write:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: \"w = MyWidget()\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Rather, widgets are instantiated by the rendering engine, when the UI is rendered.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Derived widgets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Prompto fully supports derived widgets i.e. a widget extending an existing one.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 95\n        }, this), \"However multiple inheritance is not supported. Rather, you are encouraged to use composition, which we find also works better for UI rendering.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Widget attributes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"As of writing, widgets cannot have attributes. This is planned but not available yet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 101\n        }, this), \"(reason for this is we are hesitant on how they would be initialized)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Widget storage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Widgets cannot be stored. They are for UI only.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/widgets/Widgets.js"],"names":["React","ReactWidget","ReactModal","Topic","ThisTopic","constructor","renderContent","topicSelected"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactWidget from \"./ReactWidget\";\nimport ReactModal from \"./ReactModal\";\nimport Topic from \"../../../content/Topic\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Widgets\", [ReactWidget, ReactModal]);\n    }\n\n    renderContent(topicSelected) {\n        return <>\n            <h2>Widgets</h2>\n\n            <p>Prompto supports Widgets, a special type designed to render user interface.</p>\n            <p>A widget is rendered by a rendering engine.<br/>\n                A rendering engine can be browser based (React, Vue, Angular...), or more specialized (Cocoa Touch,\n                Android UI ...).<br/>\n                Here is a non exhaustive list of rendering engines:</p>\n            <ul>\n                <li>Browser engines:<br/>\n                    <ul>\n                        <li>React</li>\n                        <li>Vue</li>\n                        <li>Ember</li>\n                        <li>Angular</li>\n                    </ul>\n                    <i>(the above can also be used by Electron)</i>\n                </li>\n                <li>iOS engines:\n                    <ul>\n                        <li>Cocoa Touch</li>\n                        <li>React Native</li>\n                    </ul>\n                </li>\n                <li>Android engines:\n                    <ul>\n                        <li>Android SDK</li>\n                        <li>React Native</li>\n                    </ul>\n                </li>\n                <li>MacOSX engines:\n                    <ul>\n                        <li>Cocoa</li>\n                    </ul>\n                </li>\n                <li>Windows engines:\n                    <ul>UWP</ul>\n                    <ul>WPF</ul>\n                    <ul>Windows Forms</ul>\n                </li>\n            </ul>\n\n            <p> As of writing, Prompto only supports the React rendering engine.</p>\n\n            <p>Prompto widgets are not usable across rendering engines. This is unfortunate, but the lack of\n                standardization in this space simply makes it impossible.<br/>\n                You must therefore decide which engine to use when coding, this cannot be changed by configuration.</p>\n            <p>Due to the above, a <i>widget</i> must extend the base widget type of the selected\n                rendering engine, and providing the methods required by the base widget.</p>\n\n            <p>Rendering occurs when a top most widget (such as a web page) is displayed.<br/>\n                At that point, the engine obtains the contents to display from the widget.<br/>\n                For example, the React engine will call the <code>render</code> method of the page widget (which must\n                return Html).<br/>\n                From there, if the returned Html contains widgets, they will in turn be rendered.</p>\n            <p>A widget cannot be instantiated in code i.e. you cannot write:</p>\n            <pre>w = MyWidget()</pre>\n            <p>Rather, widgets are instantiated by the rendering engine, when the UI is rendered.</p>\n\n            <h3>Derived widgets</h3>\n            <p>Prompto fully supports derived widgets i.e. a widget extending an existing one.<br/>\n                However multiple inheritance is not supported. Rather, you are encouraged to use composition, which\n                we find also works better for UI rendering.</p>\n            <h3>Widget attributes</h3>\n            <p>As of writing, widgets cannot have attributes. This is planned but not available yet.<br/>\n                (reason for this is we are hesitant on how they would be initialized)\n            </p>\n            <h3>Widget storage</h3>\n            <p>Widgets cannot be stored. They are for UI only.</p>\n        </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}