{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/statements/Return.js\";\nimport React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Return\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Return statements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"A return statement is used to exit a method explicitly, and optionally return a value. In the absence of a return statement, a method exits after executing the last statement, without returning a value. A return statement has the form \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"return\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 49\n        }, this), \" optionally followed by \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"expression\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 92\n        }, this), \", where expression is any valid expression.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Exiting a method without returning a value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        sampleUrl: \"samples/statements/return.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Returning a value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        sampleUrl: \"samples/statements/return-value.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Multiple return statements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Prompto supports multiple return statements in a method body, provided that all return expressions have compatible types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 10,\n        sampleUrl: \"samples/statements/return-multi.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/statements/Return.js"],"names":["React","PromptoPlayer","Topic","ThisTopic","constructor","renderContent","topicSelected","nextKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;;AAEA,MAAMC,SAAN,SAAwBD,KAAxB,CAA8B;AAE1BE,EAAAA,WAAW,GAAG;AACV,UAAM,QAAN;AACH;;AAEDC,EAAAA,aAAa,CAACC,aAAD,EAAgB;AACzB,wBAAO;AAAA,8BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAGH;AAAA,+QAGoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHpC,2CAG+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAH/E,8DAIuC;AAAA;AAAA;AAAA;AAAA,gBAJvC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHG,eASH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATG,eAYH,QAAC,aAAD;AAA6C,QAAA,SAAS,EAAC,+BAAvD;AAAuF,QAAA,QAAQ,EAAE;AAAjG,SAAoBL,aAAa,CAACM,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,cAZG,eAaH;AAAA;AAAA;AAAA;AAAA,cAbG,eAeH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfG,eAkBH,QAAC,aAAD;AAA6C,QAAA,SAAS,EAAC,qCAAvD;AAA6F,QAAA,QAAQ,EAAE;AAAvG,SAAoBN,aAAa,CAACM,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,cAlBG,eAmBH;AAAA;AAAA;AAAA;AAAA,cAnBG,eAqBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBG,eAwBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBG,eA0BH,QAAC,aAAD;AAA6C,QAAA,KAAK,EAAE,EAApD;AAAwD,QAAA,SAAS,EAAC,qCAAlE;AAAwG,QAAA,QAAQ,EAAE;AAAlH,SAAoBN,aAAa,CAACM,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,cA1BG;AAAA,oBAAP;AA6BH;;AApCyB;;AAwC9B,eAAe,IAAIJ,SAAJ,EAAf","sourcesContent":["import React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Return\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n            <h2>Return statements</h2>\n\n            <p>A return statement is used to exit a method explicitly, and optionally return a value.\n                In the absence of a return statement, a method exits after executing the last statement, without\n                returning a value.\n                A return statement has the form <code>return</code> optionally followed by <code>expression</code>, where\n                expression is any valid expression.<br/>\n            </p>\n            <h3>\n                Exiting a method without returning a value\n            </h3>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} sampleUrl=\"samples/statements/return.pec\" runnable={true}/>\n            <br/>\n\n            <h3>\n                Returning a value\n            </h3>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} sampleUrl=\"samples/statements/return-value.pec\" runnable={true}/>\n            <br/>\n\n            <h3>\n                Multiple return statements\n            </h3>\n            <p>Prompto supports multiple return statements in a method body, provided that all return expressions have\n                compatible types</p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={10} sampleUrl=\"samples/statements/return-multi.pec\" runnable={true}/>\n\n            </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}