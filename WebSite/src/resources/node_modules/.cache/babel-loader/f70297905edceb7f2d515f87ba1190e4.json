{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/playground/Response.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Response extends React.Component {\n  render() {\n    const lines = this.props.response.data.split(\"\\n\").filter(s => s.length > 0);\n    const line = lines[0];\n    lines.shift();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"response\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"responseIcon\",\n          children: \" => \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"responseData\",\n          children: line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), lines.map(this.renderIndenting, this)]\n    }, void 0, true);\n  }\n\n  renderIndenting(line, idx) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"responseIcon\",\n        children: \"\\xA0\\xA0\\xA0\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), this.renderIndents(line), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"responseData\",\n        children: line.replace(/\\t/g, \"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n\n  renderIndents(line) {\n    const indentLevel = (line.match(/\\t/g) || []).length;\n\n    if (indentLevel) {\n      const keys = Array(indentLevel).fill(0).map((val, idx) => idx);\n      return keys.map(val => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"promptIndent\",\n        children: \"\\xA0\"\n      }, val, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 36\n      }, this));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/playground/Response.js"],"names":["React","Response","Component","render","lines","props","response","data","split","filter","s","length","line","shift","map","renderIndenting","idx","renderIndents","replace","indentLevel","match","keys","Array","fill","val"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAElDC,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,KAAzB,CAA+B,IAA/B,EAAqCC,MAArC,CAA4CC,CAAC,IAAIA,CAAC,CAACC,MAAF,GAAW,CAA5D,CAAd;AACA,UAAMC,IAAI,GAAGR,KAAK,CAAC,CAAD,CAAlB;AACAA,IAAAA,KAAK,CAACS,KAAN;AACA,wBAAO;AAAA,8BACH;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA,oBAAgCD;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,EAKFR,KAAK,CAACU,GAAN,CAAU,KAAKC,eAAf,EAAgC,IAAhC,CALE;AAAA,oBAAP;AAOH;;AAEDA,EAAAA,eAAe,CAACH,IAAD,EAAOI,GAAP,EAAY;AACvB,wBAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACH;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,EAEF,KAAKC,aAAL,CAAmBL,IAAnB,CAFE,eAGH;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA,kBAAgCA,IAAI,CAACM,OAAL,CAAa,KAAb,EAAoB,EAApB;AAAhC;AAAA;AAAA;AAAA;AAAA,cAHG;AAAA,OAA+BF,GAA/B;AAAA;AAAA;AAAA;AAAA,YAAP;AAKH;;AAEDC,EAAAA,aAAa,CAACL,IAAD,EAAO;AAChB,UAAMO,WAAW,GAAG,CAACP,IAAI,CAACQ,KAAL,CAAW,KAAX,KAAqB,EAAtB,EAA0BT,MAA9C;;AACA,QAAIQ,WAAJ,EAAiB;AACb,YAAME,IAAI,GAAGC,KAAK,CAACH,WAAD,CAAL,CAAmBI,IAAnB,CAAwB,CAAxB,EAA2BT,GAA3B,CAA+B,CAACU,GAAD,EAAMR,GAAN,KAAcA,GAA7C,CAAb;AACA,aAAOK,IAAI,CAACP,GAAL,CAASU,GAAG,iBAAI;AAAgB,QAAA,SAAS,EAAC,cAA1B;AAAA;AAAA,SAAWA,GAAX;AAAA;AAAA;AAAA;AAAA,cAAhB,CAAP;AACH;AACJ;;AA7BiD","sourcesContent":["import React from 'react'\n\nexport default class Response extends React.Component {\n\n    render() {\n        const lines = this.props.response.data.split(\"\\n\").filter(s => s.length > 0);\n        const line = lines[0];\n        lines.shift();\n        return <>\n            <div className=\"response\">\n                <span className=\"responseIcon\"> => </span>\n                <span className=\"responseData\">{line}</span>\n            </div>\n            {lines.map(this.renderIndenting, this)}\n        </>;\n    }\n\n    renderIndenting(line, idx) {\n        return <div className=\"response\" key={idx}>\n            <span className=\"responseIcon\">&nbsp;&nbsp;&nbsp;&nbsp;</span>\n            {this.renderIndents(line)}\n            <span className=\"responseData\">{line.replace(/\\t/g, \"\")}</span>\n        </div>;\n    }\n\n    renderIndents(line) {\n        const indentLevel = (line.match(/\\t/g) || []).length;\n        if (indentLevel) {\n            const keys = Array(indentLevel).fill(0).map((val, idx) => idx);\n            return keys.map(val => <span key={val} className=\"promptIndent\">&nbsp;</span>);\n        }\n    }\n\n}"]},"metadata":{},"sourceType":"module"}