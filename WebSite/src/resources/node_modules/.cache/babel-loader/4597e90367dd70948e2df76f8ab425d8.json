{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/playground/Playground.js\";\nimport '../../assets/css/playground.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Repl from \"./Repl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_HISTORY = [\"Welcome to Prompto\", \"Using dialect: M\", \"Type ? for help\"].map(_c = s => {\n  return {\n    type: \"welcome\",\n    data: s\n  };\n});\n_c2 = INITIAL_HISTORY;\nexport default class Playground extends React.Component {\n  componentDidMount() {\n    this.observer = new MutationObserver(this.handleMutation.bind(this));\n    this.observer.observe(ReactDOM.findDOMNode(this), {\n      attributes: true,\n      attributeFilter: [\"style\"]\n    });\n  }\n\n  componentWillUnmount() {\n    this.observer.disconnect();\n  }\n\n  handleMutation(mutations) {\n    const mutation = mutations[0];\n    const display = mutation.target.style.display;\n    this.refs[\"repl\"].visibilityChanged(display === \"block\");\n  }\n\n  render() {\n    const divStyle = {\n      display: this.props.visible ? \"block\" : \"none\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playground\",\n      style: divStyle,\n      children: /*#__PURE__*/_jsxDEV(Repl, {\n        ref: \"repl\",\n        historyToDisplay: INITIAL_HISTORY\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"INITIAL_HISTORY$[\\n    \\\"Welcome to Prompto\\\",\\n    \\\"Using dialect: M\\\",\\n    \\\"Type ? for help\\\"\\n].map\");\n$RefreshReg$(_c2, \"INITIAL_HISTORY\");","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/playground/Playground.js"],"names":["React","ReactDOM","Repl","INITIAL_HISTORY","map","s","type","data","Playground","Component","componentDidMount","observer","MutationObserver","handleMutation","bind","observe","findDOMNode","attributes","attributeFilter","componentWillUnmount","disconnect","mutations","mutation","display","target","style","refs","visibilityChanged","render","divStyle","props","visible"],"mappings":";AAAA,OAAO,kCAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,eAAe,GAAG,CACpB,oBADoB,EAEpB,kBAFoB,EAGpB,iBAHoB,EAItBC,GAJsB,MAIlBC,CAAC,IAAI;AACP,SAAO;AAACC,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,IAAI,EAAEF;AAAxB,GAAP;AACH,CANuB,CAAxB;MAAMF,e;AAQN,eAAe,MAAMK,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AAEpDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,GAAgB,IAAIC,gBAAJ,CAAqB,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAArB,CAAhB;AACA,SAAKH,QAAL,CAAcI,OAAd,CAAsBd,QAAQ,CAACe,WAAT,CAAqB,IAArB,CAAtB,EAAkD;AAAEC,MAAAA,UAAU,EAAE,IAAd;AAAoBC,MAAAA,eAAe,EAAE,CAAC,OAAD;AAArC,KAAlD;AACH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKR,QAAL,CAAcS,UAAd;AACH;;AAEDP,EAAAA,cAAc,CAACQ,SAAD,EAAY;AACtB,UAAMC,QAAQ,GAAGD,SAAS,CAAC,CAAD,CAA1B;AACA,UAAME,OAAO,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,KAAhB,CAAsBF,OAAtC;AACA,SAAKG,IAAL,CAAU,MAAV,EAAkBC,iBAAlB,CAAoCJ,OAAO,KAAG,OAA9C;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG;AAACN,MAAAA,OAAO,EAAE,KAAKO,KAAL,CAAWC,OAAX,GAAqB,OAArB,GAA+B;AAAzC,KAAjB;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,KAAK,EAAEF,QAAnC;AAAA,6BACH,QAAC,IAAD;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,gBAAgB,EAAE1B;AAAnC;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH;;AAtBmD","sourcesContent":["import '../../assets/css/playground.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Repl from \"./Repl\";\n\nconst INITIAL_HISTORY = [\n    \"Welcome to Prompto\",\n    \"Using dialect: M\",\n    \"Type ? for help\"\n].map(s => {\n    return {type: \"welcome\", data: s};\n});\n\nexport default class Playground extends React.Component {\n\n    componentDidMount() {\n        this.observer = new MutationObserver(this.handleMutation.bind(this));\n        this.observer.observe(ReactDOM.findDOMNode(this), { attributes: true, attributeFilter: [\"style\"] });\n    }\n\n    componentWillUnmount() {\n        this.observer.disconnect();\n    }\n\n    handleMutation(mutations) {\n        const mutation = mutations[0];\n        const display = mutation.target.style.display;\n        this.refs[\"repl\"].visibilityChanged(display===\"block\");\n    }\n\n    render() {\n        const divStyle = {display: this.props.visible ? \"block\" : \"none\"};\n        return <div className=\"playground\" style={divStyle}>\n            <Repl ref=\"repl\" historyToDisplay={INITIAL_HISTORY}/>\n        </div>;\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}