{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/widgets/ReactModal.js\";\nimport React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"React modals\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"React modals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Because it is \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"reactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 30\n        }, this), \" to \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 49\n        }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"props\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 72\n        }, this), \" rather than \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"premptive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 103\n        }, this), \", React makes it somewhat difficult to display transient widgets that are not embedded in the layout, such as modal dialogs.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 243\n        }, this), \"To help display such widgets, Prompto comes with 4 useful methods:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"showReactModal(Html modal)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 54\n          }, this), \"The showReactModal is a method that can be called from widget code. It accepts Html.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 105\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"hideReactModal()\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 44\n          }, this), \"The hideReactModal is a method that can be called from widget code. It takes no parameter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 111\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"showReactContextMenu(ClickEvent event, Html menu)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 77\n          }, this), \"The showReactContextMenu is a method that can be called from widget code. It accepts a ClickEvent and Html.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 128\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"hideReactContextMenu()\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 50\n          }, this), \"The hideReactContextMenu is a method that can be called from widget code. It takes no parameter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 117\n          }, this), \"You usually do not need to call this method because the context menu is closed automatically on the next click.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 132\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"In the below example, when clicking on a button, a \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 67\n        }, this), \" is displayed.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 99\n        }, this), \"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), \" itself has a button to close the modal.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 40,\n        sampleUrl: \"samples/widgets/react-modal.poc\"\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"It is worth noting that these methods affect the html rendering of the widget, but the widget itself might require additional properties to be visible.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 167\n        }, this), \"For example React Bootstrap 3 modals require a \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 64\n        }, this), \" property to be set (see above example).\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Also worth noting, the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"showReactModal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 39\n        }, this), \" is not blocking. It prepares rendering for the next React cycle and returns \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"before\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 143\n        }, this), \" the modal is actually displayed.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 189\n        }, this), \"This also applies to \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"hideReactModal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 38\n        }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"showReactContextMenu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 67\n        }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"hideReactContextMenu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 105\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/widgets/ReactModal.js"],"names":["React","PromptoPlayer","Topic","ThisTopic","constructor","renderContent","topicSelected","nextKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;;AAEA,MAAMC,SAAN,SAAwBD,KAAxB,CAA8B;AAE1BE,EAAAA,WAAW,GAAG;AACV,UAAM,cAAN;AACH;;AAEDC,EAAAA,aAAa,CAACC,aAAD,EAAgB;AACzB,wBAAO;AAAA,8BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAEH;AAAA,kDAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAjB,uBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAApC,wBAA2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3D,gCAA0F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1F,+IAAsO;AAAA;AAAA;AAAA;AAAA,gBAAtO;AAAA;AAAA;AAAA;AAAA;AAAA,cAFG,eAIH;AAAA,gCACI;AAAA,kCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,eAAqC;AAAA;AAAA;AAAA;AAAA,kBAArC,uGACwF;AAAA;AAAA;AAAA;AAAA,kBADxF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,kCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,eAA2B;AAAA;AAAA;AAAA;AAAA,kBAA3B,6GAC8F;AAAA;AAAA;AAAA;AAAA,kBAD9F;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAA,kCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,eAA4D;AAAA;AAAA;AAAA;AAAA,kBAA5D,8HAC+G;AAAA;AAAA;AAAA;AAAA,kBAD/G;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI;AAAA,kCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,eAAiC;AAAA;AAAA;AAAA;AAAA,kBAAjC,mHACoG;AAAA;AAAA;AAAA;AAAA,kBADpG,kIAEmH;AAAA;AAAA;AAAA;AAAA,kBAFnH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJG,eAmBH;AAAA,uFAAsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAtD,iCAAsF;AAAA;AAAA;AAAA;AAAA,gBAAtF,uBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBG,eAqBH,QAAC,aAAD;AAA6C,QAAA,KAAK,EAAE,EAApD;AAAwD,QAAA,SAAS,EAAC;AAAlE,SAAoBL,aAAa,CAACM,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,cArBG,eAsBH;AAAA;AAAA;AAAA;AAAA,cAtBG,eAuBH;AAAA,2LAA0J;AAAA;AAAA;AAAA;AAAA,gBAA1J,kEACmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADnD;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBG,eA0BH;AAAA,2DAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1B,gGAAkI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlI,oDAAgL;AAAA;AAAA;AAAA;AAAA,gBAAhL,wCACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADzB,qBACsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADtD,wBAC4F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD5F;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BG;AAAA,oBAAP;AA+BH;;AAtCyB;;AA0C9B,eAAe,IAAIJ,SAAJ,EAAf","sourcesContent":["import React from 'react';\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport Topic from \"../../../content/Topic\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"React modals\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n            <h2>React modals</h2>\n            <p>Because it is <i>reactive</i> to <code>state</code> and <code>props</code> rather than <i>premptive</i>, React makes it somewhat difficult to display transient widgets that are not embedded in the layout, such as modal dialogs.<br/>\n            To help display such widgets, Prompto comes with 4 useful methods:</p>\n            <ul>\n                <li><b>showReactModal(Html modal)</b><br/>\n                    The showReactModal is a method that can be called from widget code. It accepts Html.<br/>\n                </li>\n                <li><b>hideReactModal()</b><br/>\n                    The hideReactModal is a method that can be called from widget code. It takes no parameter.<br/>\n                </li>\n                <li><b>showReactContextMenu(ClickEvent event, Html menu)</b><br/>\n                    The showReactContextMenu is a method that can be called from widget code. It accepts a ClickEvent and Html.<br/>\n                </li>\n                <li><b>hideReactContextMenu()</b><br/>\n                    The hideReactContextMenu is a method that can be called from widget code. It takes no parameter.<br/>\n                    You usually do not need to call this method because the context menu is closed automatically on the next click.<br/>\n                </li>\n            </ul>\n            <p>In the below example, when clicking on a button, a <code>Modal</code> is displayed.<br/>\n                The <code>Modal</code> itself has a button to close the modal.</p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={40} sampleUrl=\"samples/widgets/react-modal.poc\" />\n            <p/>\n            <p>It is worth noting that these methods affect the html rendering of the widget, but the widget itself might require additional properties to be visible.<br/>\n                For example React Bootstrap 3 modals require a <code>show</code> property to be set (see above example).\n            </p>\n            <p>Also worth noting, the <code>showReactModal</code> is not blocking. It prepares rendering for the next React cycle and returns <i>before</i> the modal is actually displayed.<br/>\n                This also applies to <code>hideReactModal</code>, <code>showReactContextMenu</code> and <code>hideReactContextMenu</code>.\n            </p>\n\n            </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}