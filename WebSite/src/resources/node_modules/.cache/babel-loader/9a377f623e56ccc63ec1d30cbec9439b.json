{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/expressions/Read.js\";\nimport React from 'react';\nimport Topic from \"../../../content/Topic\";\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThisTopic extends Topic {\n  constructor() {\n    super(\"Read\");\n  }\n\n  renderContent(topicSelected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Read expressions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Read expressions are used to read content from a resource such as a file or a web site.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 103\n        }, this), \"A read expression is a code fragment which produces a \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 71\n        }, this), \" value, which can then be used as an input for other operations: print, write, method call and so forth.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Reading the entire content of an \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"inlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 50\n        }, this), \" resource\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Reading the entire content of a resource can be achieved using an \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"inlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 82\n        }, this), \" resource.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 106\n        }, this), \"An \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"inlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 20\n        }, this), \" resource is initialized directly within a \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 77\n        }, this), \" expression.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 106\n        }, this), \"This is very useful for small files or small messages received from incoming network connections.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        sampleUrl: \"samples/expressions/read-inline.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Reading content line by line from a \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"managed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 53\n        }, this), \" resource\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Reading content line by line from a resource can be achieved using a \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"managed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 85\n        }, this), \" resource.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 109\n        }, this), \"A \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"managed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }, this), \" resource is initialized through a \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"with\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 68\n        }, this), \" clause followed by a list of statements.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 28\n        }, this), \"The resource is said to be \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"managed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 44\n        }, this), \" because Prompto will take care of resource cleanup when it exits the statements controlled by \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"with\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 46\n        }, this), \" clause.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PromptoPlayer, {\n        lines: 10,\n        sampleUrl: \"samples/expressions/read-managed.pec\",\n        runnable: true\n      }, PromptoPlayer.nextKey(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"It is illegal to call \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"write\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 38\n        }, this), \" or \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 60\n        }, this), \" on a resource which is neither \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"managed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), \" nor \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"inlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 44\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default new ThisTopic();","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/prompto-docs/WebSite/src/resources/src/components/reference/topics/expressions/Read.js"],"names":["React","Topic","PromptoPlayer","ThisTopic","constructor","renderContent","topicSelected","nextKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;;;AAEA,MAAMC,SAAN,SAAwBF,KAAxB,CAA8B;AAE1BG,EAAAA,WAAW,GAAG;AACV,UAAM,MAAN;AACH;;AAEDC,EAAAA,aAAa,CAACC,aAAD,EAAgB;AACzB,wBAAO;AAAA,8BAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFG,eAIH;AAAA,2HAA0F;AAAA;AAAA;AAAA;AAAA,gBAA1F,yEAC0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD1D;AAAA;AAAA;AAAA;AAAA;AAAA,cAJG,eAQH;AAAA,qEACqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADrC;AAAA;AAAA;AAAA;AAAA;AAAA,cARG,eAWH;AAAA,sGAAqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAArE,6BAA6F;AAAA;AAAA;AAAA;AAAA,gBAA7F,sBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP,8DACgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADhE,+BAC6F;AAAA;AAAA;AAAA;AAAA,gBAD7F;AAAA;AAAA;AAAA;AAAA;AAAA,cAXG,eAeH,QAAC,aAAD;AAA6C,QAAA,SAAS,EAAC,qCAAvD;AAA6F,QAAA,QAAQ,EAAE;AAAvG,SAAoBJ,aAAa,CAACK,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,cAfG,eAgBH;AAAA;AAAA;AAAA;AAAA,cAhBG,eAkBH;AAAA,wEACwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADxC;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBG,eAqBH;AAAA,yGAAwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAxE,6BAAgG;AAAA;AAAA;AAAA;AAAA,gBAAhG,qBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADN,sDACuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADvD,4DAEe;AAAA;AAAA;AAAA;AAAA,gBAFf,8CAG+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAH/B,kHAKiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALjC;AAAA;AAAA;AAAA;AAAA;AAAA,cArBG,eA4BH,QAAC,aAAD;AAA6C,QAAA,KAAK,EAAE,EAApD;AAAwD,QAAA,SAAS,EAAC,sCAAlE;AAAyG,QAAA,QAAQ,EAAE;AAAnH,SAAoBL,aAAa,CAACK,OAAd,EAApB;AAAA;AAAA;AAAA;AAAA,cA5BG,eA6BH;AAAA;AAAA;AAAA;AAAA,cA7BG,eA+BH;AAAA,0DAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAzB,uBAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA/C,mDACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADZ,wBAC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BG;AAAA,oBAAP;AAmCH;;AA1CyB;;AA8C9B,eAAe,IAAIJ,SAAJ,EAAf","sourcesContent":["import React from 'react';\nimport Topic from \"../../../content/Topic\";\nimport PromptoPlayer from \"../../../player/PromptoPlayer\";\n\nclass ThisTopic extends Topic {\n\n    constructor() {\n        super(\"Read\");\n    }\n\n    renderContent(topicSelected) {\n        return <>\n\n            <h2>Read expressions</h2>\n\n            <p>Read expressions are used to read content from a resource such as a file or a web site.<br/>\n                A read expression is a code fragment which produces a <code>Text</code> value, which can then be used as\n                an input for other operations: print, write, method call and so forth.\n            </p>\n            <h3>\n                Reading the entire content of an <i>inlined</i> resource\n            </h3>\n            <p>Reading the entire content of a resource can be achieved using an <i>inlined</i> resource.<br/>\n                An <i>inlined</i> resource is initialized directly within a <code>read</code> expression.<br/>\n                This is very useful for small files or small messages received from incoming network connections.\n            </p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} sampleUrl=\"samples/expressions/read-inline.pec\" runnable={true}/>\n            <br/>\n\n            <h3>\n                Reading content line by line from a <i>managed</i> resource\n            </h3>\n            <p>Reading content line by line from a resource can be achieved using a <i>managed</i> resource.<br/>\n                A <i>managed</i> resource is initialized through a <code>with</code> clause followed by a list of\n                statements.<br/>\n                The resource is said to be <i>managed</i> because Prompto will take care of resource cleanup when it\n                exits\n                the statements controlled by <code>with</code> clause.\n            </p>\n            <PromptoPlayer key={PromptoPlayer.nextKey()} lines={10} sampleUrl=\"samples/expressions/read-managed.pec\" runnable={true}/>\n            <br/>\n\n            <p>It is illegal to call <code>write</code> or <code>read</code> on a resource which is\n                neither <i>managed</i> nor <i>inlined</i>.</p>\n\n            </>;\n    }\n\n}\n\nexport default new ThisTopic();"]},"metadata":{},"sourceType":"module"}